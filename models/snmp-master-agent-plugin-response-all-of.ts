/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

The version of the OpenAPI document: 0.1


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { EnumpluginAgentAuthenticationProtocolProp } from './enumplugin-agent-authentication-protocol-prop';
import { EnumpluginAgentPrivacyProtocolProp } from './enumplugin-agent-privacy-protocol-prop';
import { EnumpluginAgentSNMPVersionProp } from './enumplugin-agent-snmpversion-prop';
import { EnumpluginAgentSecurityLevelProp } from './enumplugin-agent-security-level-prop';
import { EnumpluginAgentxTransportProp } from './enumplugin-agentx-transport-prop';
import { EnumsnmpMasterAgentPluginSchemaUrn } from './enumsnmp-master-agent-plugin-schema-urn';

/**
 * 
 * @export
 * @interface SnmpMasterAgentPluginResponseAllOf
 */
export interface SnmpMasterAgentPluginResponseAllOf {
    /**
     * A description for this Plugin
     * @type {string}
     * @memberof SnmpMasterAgentPluginResponseAllOf
     */
    'description'?: string;
    /**
     * 
     * @type {Array<EnumsnmpMasterAgentPluginSchemaUrn>}
     * @memberof SnmpMasterAgentPluginResponseAllOf
     */
    'schemas'?: Array<EnumsnmpMasterAgentPluginSchemaUrn>;
    /**
     * Name of the Plugin
     * @type {string}
     * @memberof SnmpMasterAgentPluginResponseAllOf
     */
    'id'?: string;
    /**
     * The IP address on which the SNMP agent will listen for client requests.
     * @type {string}
     * @memberof SnmpMasterAgentPluginResponseAllOf
     */
    'listenAddress'?: string;
    /**
     * The port number on which the SNMP agent will listen for client requests.
     * @type {number}
     * @memberof SnmpMasterAgentPluginResponseAllOf
     */
    'listenPort'?: number;
    /**
     * Indicates whether the SNMP agent should use TCP or UDP as the transport layer for sub-agent sessions.
     * @type {EnumpluginAgentxTransportProp}
     * @memberof SnmpMasterAgentPluginResponseAllOf
     */
    'agentxTransport'?: EnumpluginAgentxTransportProp;
    /**
     * The IP address on which the SNMP agent will listen for sub-agent sessions.
     * @type {string}
     * @memberof SnmpMasterAgentPluginResponseAllOf
     */
    'agentxListenAddress'?: string;
    /**
     * The port number on which the SNMP agent will listen for sub-agent sessions.
     * @type {number}
     * @memberof SnmpMasterAgentPluginResponseAllOf
     */
    'agentxListenPort'?: number;
    /**
     * The IP address of the target to which the SNMP agent should send notifications (traps).
     * @type {string}
     * @memberof SnmpMasterAgentPluginResponseAllOf
     */
    'notificationTargetAddress'?: string;
    /**
     * The port number of the target to which the SNMP agent should send notifications (traps).
     * @type {number}
     * @memberof SnmpMasterAgentPluginResponseAllOf
     */
    'notificationTargetPort'?: number;
    /**
     * 
     * @type {Array<EnumpluginAgentSNMPVersionProp>}
     * @memberof SnmpMasterAgentPluginResponseAllOf
     */
    'agentSNMPVersion'?: Array<EnumpluginAgentSNMPVersionProp>;
    /**
     * The name of the community to use for the SNMP agent.
     * @type {string}
     * @memberof SnmpMasterAgentPluginResponseAllOf
     */
    'communityName'?: string;
    /**
     * The security name (i.e., username) to use for the SNMP agent. This must be defined if SNMPv3 is to be used.
     * @type {string}
     * @memberof SnmpMasterAgentPluginResponseAllOf
     */
    'agentSecurityName'?: string;
    /**
     * The type of security to use for SNMPv3 communication.
     * @type {EnumpluginAgentSecurityLevelProp}
     * @memberof SnmpMasterAgentPluginResponseAllOf
     */
    'agentSecurityLevel'?: EnumpluginAgentSecurityLevelProp;
    /**
     * The authentication protocol to use for SNMPv3 if authentication is to be performed.
     * @type {EnumpluginAgentAuthenticationProtocolProp}
     * @memberof SnmpMasterAgentPluginResponseAllOf
     */
    'agentAuthenticationProtocol'?: EnumpluginAgentAuthenticationProtocolProp;
    /**
     * The authentication passphrase to use for SNMPv3 if authentication is to be performed.
     * @type {string}
     * @memberof SnmpMasterAgentPluginResponseAllOf
     */
    'agentAuthenticationPassphrase'?: string;
    /**
     * The privacy protocol to use for SNMPv3 if privacy is to be used.
     * @type {EnumpluginAgentPrivacyProtocolProp}
     * @memberof SnmpMasterAgentPluginResponseAllOf
     */
    'agentPrivacyProtocol'?: EnumpluginAgentPrivacyProtocolProp;
    /**
     * The privacy passphrase to use for SNMPv3 if privacy is to be used.
     * @type {string}
     * @memberof SnmpMasterAgentPluginResponseAllOf
     */
    'agentPrivacyPassphrase'?: string;
    /**
     * The number of worker threads to use to handle SNMP requests.
     * @type {number}
     * @memberof SnmpMasterAgentPluginResponseAllOf
     */
    'numWorkerThreads'?: number;
    /**
     * Indicates whether the plug-in is enabled for use.
     * @type {boolean}
     * @memberof SnmpMasterAgentPluginResponseAllOf
     */
    'enabled'?: boolean;
    /**
     * Indicates whether the plug-in should be invoked for internal operations.
     * @type {boolean}
     * @memberof SnmpMasterAgentPluginResponseAllOf
     */
    'invokeForInternalOperations'?: boolean;
}

