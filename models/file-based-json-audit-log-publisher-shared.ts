/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

The version of the OpenAPI document: 0.1


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { EnumfileBasedJsonAuditLogPublisherSchemaUrn } from './enumfile-based-json-audit-log-publisher-schema-urn';
import { EnumlogPublisherCompressionMechanismProp } from './enumlog-publisher-compression-mechanism-prop';
import { EnumlogPublisherFileBasedJsonAuditSoftDeleteEntryAuditBehaviorProp } from './enumlog-publisher-file-based-json-audit-soft-delete-entry-audit-behavior-prop';
import { EnumlogPublisherLoggingErrorBehaviorProp } from './enumlog-publisher-logging-error-behavior-prop';

/**
 * 
 * @export
 * @interface FileBasedJsonAuditLogPublisherShared
 */
export interface FileBasedJsonAuditLogPublisherShared {
    /**
     * A description for this Log Publisher
     * @type {string}
     * @memberof FileBasedJsonAuditLogPublisherShared
     */
    'description'?: string;
    /**
     * 
     * @type {Array<EnumfileBasedJsonAuditLogPublisherSchemaUrn>}
     * @memberof FileBasedJsonAuditLogPublisherShared
     */
    'schemas': Array<EnumfileBasedJsonAuditLogPublisherSchemaUrn>;
    /**
     * The file name to use for the log files generated by the File Based JSON Audit Log Publisher. The path to the file can be specified either as relative to the server root or as an absolute path.
     * @type {string}
     * @memberof FileBasedJsonAuditLogPublisherShared
     */
    'logFile': string;
    /**
     * The UNIX permissions of the log files created by this File Based JSON Audit Log Publisher.
     * @type {string}
     * @memberof FileBasedJsonAuditLogPublisherShared
     */
    'logFilePermissions'?: string;
    /**
     * The rotation policy to use for the File Based JSON Audit Log Publisher .
     * @type {Array<string>}
     * @memberof FileBasedJsonAuditLogPublisherShared
     */
    'rotationPolicy'?: Array<string>;
    /**
     * A listener that should be notified whenever a log file is rotated out of service.
     * @type {Array<string>}
     * @memberof FileBasedJsonAuditLogPublisherShared
     */
    'rotationListener'?: Array<string>;
    /**
     * The retention policy to use for the File Based JSON Audit Log Publisher .
     * @type {Array<string>}
     * @memberof FileBasedJsonAuditLogPublisherShared
     */
    'retentionPolicy'?: Array<string>;
    /**
     * Specifies the type of compression (if any) to use for log files that are written.
     * @type {EnumlogPublisherCompressionMechanismProp}
     * @memberof FileBasedJsonAuditLogPublisherShared
     */
    'compressionMechanism'?: EnumlogPublisherCompressionMechanismProp;
    /**
     * Indicates whether the log should be cryptographically signed so that the log content cannot be altered in an undetectable manner.
     * @type {boolean}
     * @memberof FileBasedJsonAuditLogPublisherShared
     */
    'signLog'?: boolean;
    /**
     * Indicates whether log files should be encrypted so that their content is not available to unauthorized users.
     * @type {boolean}
     * @memberof FileBasedJsonAuditLogPublisherShared
     */
    'encryptLog'?: boolean;
    /**
     * Specifies the ID of the encryption settings definition that should be used to encrypt the data. If this is not provided, the server\'s preferred encryption settings definition will be used. The \"encryption-settings list\" command can be used to obtain a list of the encryption settings definitions available in the server.
     * @type {string}
     * @memberof FileBasedJsonAuditLogPublisherShared
     */
    'encryptionSettingsDefinitionID'?: string;
    /**
     * Specifies whether to append to existing log files.
     * @type {boolean}
     * @memberof FileBasedJsonAuditLogPublisherShared
     */
    'append'?: boolean;
    /**
     * Indicates whether the File Based JSON Audit Log Publisher will publish records asynchronously.
     * @type {boolean}
     * @memberof FileBasedJsonAuditLogPublisherShared
     */
    'asynchronous'?: boolean;
    /**
     * Specifies whether to flush the writer after every log record.
     * @type {boolean}
     * @memberof FileBasedJsonAuditLogPublisherShared
     */
    'autoFlush'?: boolean;
    /**
     * Specifies the log file buffer size.
     * @type {string}
     * @memberof FileBasedJsonAuditLogPublisherShared
     */
    'bufferSize'?: string;
    /**
     * The maximum number of log records that can be stored in the asynchronous queue.
     * @type {number}
     * @memberof FileBasedJsonAuditLogPublisherShared
     */
    'queueSize'?: number;
    /**
     * Specifies the interval at which to check whether the log files need to be rotated.
     * @type {string}
     * @memberof FileBasedJsonAuditLogPublisherShared
     */
    'timeInterval'?: string;
    /**
     * Indicates whether the JSON objects should use a multi-line representation (with each object field and array value on its own line) that may be easier for administrators to read, but each message will be larger (because of additional spaces and end-of-line markers), and it may be more difficult to consume and parse through some text-oriented tools.
     * @type {boolean}
     * @memberof FileBasedJsonAuditLogPublisherShared
     */
    'writeMultiLineMessages'?: boolean;
    /**
     * Indicates whether the audit log should be written in reversible form so that it is possible to revert the changes if desired.
     * @type {boolean}
     * @memberof FileBasedJsonAuditLogPublisherShared
     */
    'useReversibleForm'?: boolean;
    /**
     * Specifies the audit behavior for delete and modify operations on soft-deleted entries.
     * @type {EnumlogPublisherFileBasedJsonAuditSoftDeleteEntryAuditBehaviorProp}
     * @memberof FileBasedJsonAuditLogPublisherShared
     */
    'softDeleteEntryAuditBehavior'?: EnumlogPublisherFileBasedJsonAuditSoftDeleteEntryAuditBehaviorProp;
    /**
     * Indicates whether to include information about any operation purpose request control that may have been included in the request.
     * @type {boolean}
     * @memberof FileBasedJsonAuditLogPublisherShared
     */
    'includeOperationPurposeRequestControl'?: boolean;
    /**
     * Indicates whether to include information about any intermediate client request control that may have been included in the request.
     * @type {boolean}
     * @memberof FileBasedJsonAuditLogPublisherShared
     */
    'includeIntermediateClientRequestControl'?: boolean;
    /**
     * Specifies the names of any attribute types that should have their values obscured in the audit log because they may be considered sensitive.
     * @type {Array<string>}
     * @memberof FileBasedJsonAuditLogPublisherShared
     */
    'obscureAttribute'?: Array<string>;
    /**
     * Specifies the names of any attribute types that should be excluded from the audit log.
     * @type {Array<string>}
     * @memberof FileBasedJsonAuditLogPublisherShared
     */
    'excludeAttribute'?: Array<string>;
    /**
     * Indicates whether internal operations (for example, operations that are initiated by plugins) should be logged along with the operations that are requested by users.
     * @type {boolean}
     * @memberof FileBasedJsonAuditLogPublisherShared
     */
    'suppressInternalOperations'?: boolean;
    /**
     * Indicates whether log messages should include the product name for the Directory Server.
     * @type {boolean}
     * @memberof FileBasedJsonAuditLogPublisherShared
     */
    'includeProductName'?: boolean;
    /**
     * Indicates whether log messages should include the instance name for the Directory Server.
     * @type {boolean}
     * @memberof FileBasedJsonAuditLogPublisherShared
     */
    'includeInstanceName'?: boolean;
    /**
     * Indicates whether log messages should include the startup ID for the Directory Server, which is a value assigned to the server instance at startup and may be used to identify when the server has been restarted.
     * @type {boolean}
     * @memberof FileBasedJsonAuditLogPublisherShared
     */
    'includeStartupID'?: boolean;
    /**
     * Indicates whether log messages should include the thread ID for the Directory Server in each log message. This ID can be used to correlate log messages from the same thread within a single log as well as generated by the same thread across different types of log files. More information about the thread with a specific ID can be obtained using the cn=JVM Stack Trace,cn=monitor entry.
     * @type {boolean}
     * @memberof FileBasedJsonAuditLogPublisherShared
     */
    'includeThreadID'?: boolean;
    /**
     * Indicates whether log messages for operation requests should include the DN of the authenticated user for the client connection on which the operation was requested.
     * @type {boolean}
     * @memberof FileBasedJsonAuditLogPublisherShared
     */
    'includeRequesterDN'?: boolean;
    /**
     * Indicates whether log messages for operation requests should include the IP address of the client that requested the operation.
     * @type {boolean}
     * @memberof FileBasedJsonAuditLogPublisherShared
     */
    'includeRequesterIPAddress'?: boolean;
    /**
     * Indicates whether log messages for operation requests should include a list of the OIDs of any controls included in the request.
     * @type {boolean}
     * @memberof FileBasedJsonAuditLogPublisherShared
     */
    'includeRequestControls'?: boolean;
    /**
     * Indicates whether log messages for operation results should include a list of the OIDs of any controls included in the result.
     * @type {boolean}
     * @memberof FileBasedJsonAuditLogPublisherShared
     */
    'includeResponseControls'?: boolean;
    /**
     * Indicates whether to log information about the replication change ID.
     * @type {boolean}
     * @memberof FileBasedJsonAuditLogPublisherShared
     */
    'includeReplicationChangeID'?: boolean;
    /**
     * Indicates whether to log information about the result of any security negotiation (e.g., SSL handshake) processing that has been performed.
     * @type {boolean}
     * @memberof FileBasedJsonAuditLogPublisherShared
     */
    'logSecurityNegotiation'?: boolean;
    /**
     * Indicates whether access messages that are generated by replication operations should be suppressed.
     * @type {boolean}
     * @memberof FileBasedJsonAuditLogPublisherShared
     */
    'suppressReplicationOperations'?: boolean;
    /**
     * Specifies a set of connection criteria that must match the associated client connection in order for a connect, disconnect, request, or result message to be logged.
     * @type {string}
     * @memberof FileBasedJsonAuditLogPublisherShared
     */
    'connectionCriteria'?: string;
    /**
     * Specifies a set of request criteria that must match the associated operation request in order for a request or result to be logged by this Access Log Publisher.
     * @type {string}
     * @memberof FileBasedJsonAuditLogPublisherShared
     */
    'requestCriteria'?: string;
    /**
     * Specifies a set of result criteria that must match the associated operation result in order for that result to be logged by this Access Log Publisher.
     * @type {string}
     * @memberof FileBasedJsonAuditLogPublisherShared
     */
    'resultCriteria'?: string;
    /**
     * Indicates whether the Log Publisher is enabled for use.
     * @type {boolean}
     * @memberof FileBasedJsonAuditLogPublisherShared
     */
    'enabled': boolean;
    /**
     * Specifies the behavior that the server should exhibit if an error occurs during logging processing.
     * @type {EnumlogPublisherLoggingErrorBehaviorProp}
     * @memberof FileBasedJsonAuditLogPublisherShared
     */
    'loggingErrorBehavior'?: EnumlogPublisherLoggingErrorBehaviorProp;
}

