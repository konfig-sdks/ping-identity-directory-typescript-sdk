/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

The version of the OpenAPI document: 0.1


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { EnumexternalServerScim2HostnameVerificationMethodProp } from './enumexternal-server-scim2-hostname-verification-method-prop';
import { Enumscim2ExternalServerSchemaUrn } from './enumscim2-external-server-schema-urn';

/**
 * 
 * @export
 * @interface Scim2ExternalServerResponseAllOf
 */
export interface Scim2ExternalServerResponseAllOf {
    /**
     * A description for this External Server
     * @type {string}
     * @memberof Scim2ExternalServerResponseAllOf
     */
    'description'?: string;
    /**
     * 
     * @type {Array<Enumscim2ExternalServerSchemaUrn>}
     * @memberof Scim2ExternalServerResponseAllOf
     */
    'schemas'?: Array<Enumscim2ExternalServerSchemaUrn>;
    /**
     * Name of the External Server
     * @type {string}
     * @memberof Scim2ExternalServerResponseAllOf
     */
    'id'?: string;
    /**
     * The base URL for the SCIMv2 service. It must include the hostname, port, and base path to use to make SCIMv2 calls.
     * @type {string}
     * @memberof Scim2ExternalServerResponseAllOf
     */
    'scimServiceURL'?: string;
    /**
     * A reference to an HTTP proxy server that should be used for requests sent to the SCIMv2 service.
     * @type {string}
     * @memberof Scim2ExternalServerResponseAllOf
     */
    'httpProxyExternalServer'?: string;
    /**
     * The key manager provider to use if it is necessary to present a client certificate to the SCIMv2 server.
     * @type {string}
     * @memberof Scim2ExternalServerResponseAllOf
     */
    'keyManagerProvider'?: string;
    /**
     * The trust manager provider to use to determine whether to trust the certificate presented by the SCIMv2 server during TLS negotiation.
     * @type {string}
     * @memberof Scim2ExternalServerResponseAllOf
     */
    'trustManagerProvider'?: string;
    /**
     * The nickname (alias) of the entry in the associated key store that holds the client certificate chain to present to the SCIMv2 server during TLS negotiation.
     * @type {string}
     * @memberof Scim2ExternalServerResponseAllOf
     */
    'sslCertNickname'?: string;
    /**
     * The method that should be used to validate the hostname in the server certificate presented during TLS negotiation.
     * @type {EnumexternalServerScim2HostnameVerificationMethodProp}
     * @memberof Scim2ExternalServerResponseAllOf
     */
    'hostnameVerificationMethod'?: EnumexternalServerScim2HostnameVerificationMethodProp;
    /**
     * The method to use to authorize requests sent to the SCIMv2 server.
     * @type {string}
     * @memberof Scim2ExternalServerResponseAllOf
     */
    'httpAuthorizationMethod'?: string;
    /**
     * The maximum length of time to wait for a response from the SCIMv2 server when processing operations.
     * @type {string}
     * @memberof Scim2ExternalServerResponseAllOf
     */
    'responseTimeout'?: string;
    /**
     * The maximum length of time that a client instance should remain active before being recreated.
     * @type {string}
     * @memberof Scim2ExternalServerResponseAllOf
     */
    'clientReconnectInterval'?: string;
}

