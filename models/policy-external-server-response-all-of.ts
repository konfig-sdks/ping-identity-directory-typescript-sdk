/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

The version of the OpenAPI document: 0.1


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { EnumexternalServerPolicyHostnameVerificationMethodProp } from './enumexternal-server-policy-hostname-verification-method-prop';
import { EnumpolicyExternalServerSchemaUrn } from './enumpolicy-external-server-schema-urn';

/**
 * 
 * @export
 * @interface PolicyExternalServerResponseAllOf
 */
export interface PolicyExternalServerResponseAllOf {
    /**
     * A description for this External Server
     * @type {string}
     * @memberof PolicyExternalServerResponseAllOf
     */
    'description'?: string;
    /**
     * 
     * @type {Array<EnumpolicyExternalServerSchemaUrn>}
     * @memberof PolicyExternalServerResponseAllOf
     */
    'schemas'?: Array<EnumpolicyExternalServerSchemaUrn>;
    /**
     * Name of the External Server
     * @type {string}
     * @memberof PolicyExternalServerResponseAllOf
     */
    'id'?: string;
    /**
     * Specifies the user ID to authenticate calls to the policy server\'s governance engine API.
     * @type {string}
     * @memberof PolicyExternalServerResponseAllOf
     */
    'userID'?: string;
    /**
     * Specifies the shared secret to authenticate calls to the policy server\'s governance engine API.
     * @type {string}
     * @memberof PolicyExternalServerResponseAllOf
     */
    'sharedSecret'?: string;
    /**
     * Specifies the ID of the policy tree node that will act as the root node for policy evaluation.
     * @type {string}
     * @memberof PolicyExternalServerResponseAllOf
     */
    'decisionNode'?: string;
    /**
     * Specifies the name of the policy branch to use for policy evaluation.
     * @type {string}
     * @memberof PolicyExternalServerResponseAllOf
     */
    'branch'?: string;
    /**
     * Specifies the ID of a specific commit to use for policy evaluation.
     * @type {string}
     * @memberof PolicyExternalServerResponseAllOf
     */
    'snapshot'?: string;
    /**
     * The mechanism for checking if the hostname of the Policy External Server matches the name(s) stored inside the server\'s X.509 certificate. This is only applicable if SSL is being used for connection security.
     * @type {EnumexternalServerPolicyHostnameVerificationMethodProp}
     * @memberof PolicyExternalServerResponseAllOf
     */
    'hostnameVerificationMethod'?: EnumexternalServerPolicyHostnameVerificationMethodProp;
    /**
     * The key manager provider to use if SSL (HTTPS) is to be used for connection-level security. When specifying a value for this property (except when using the Null key manager provider) you must ensure that the external server trusts this server\'s public certificate by adding this server\'s public certificate to the external server\'s trust store.
     * @type {string}
     * @memberof PolicyExternalServerResponseAllOf
     */
    'keyManagerProvider'?: string;
    /**
     * The trust manager provider to use if SSL (HTTPS) is to be used for connection-level security.
     * @type {string}
     * @memberof PolicyExternalServerResponseAllOf
     */
    'trustManagerProvider'?: string;
    /**
     * The base URL of the external server, optionally including port number, for example \"https://externalService:9031\".
     * @type {string}
     * @memberof PolicyExternalServerResponseAllOf
     */
    'baseURL'?: string;
    /**
     * The certificate alias within the keystore to use if SSL (HTTPS) is to be used for connection-level security. When specifying a value for this property you must ensure that the external server trusts this server\'s public certificate by adding this server\'s public certificate to the external server\'s trust store.
     * @type {string}
     * @memberof PolicyExternalServerResponseAllOf
     */
    'sslCertNickname'?: string;
    /**
     * Specifies the maximum length of time to wait for a connection to be established before aborting a request to the server.
     * @type {string}
     * @memberof PolicyExternalServerResponseAllOf
     */
    'connectTimeout'?: string;
    /**
     * Specifies the maximum length of time to wait for response data to be read from an established connection before aborting a request to the server.
     * @type {string}
     * @memberof PolicyExternalServerResponseAllOf
     */
    'responseTimeout'?: string;
}

