/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

The version of the OpenAPI document: 0.1


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { EnumapiExternalServerSchemaUrn } from './enumapi-external-server-schema-urn';
import { EnumexternalServerApiHostnameVerificationMethodProp } from './enumexternal-server-api-hostname-verification-method-prop';

/**
 * 
 * @export
 * @interface ApiExternalServerResponseAllOf
 */
export interface ApiExternalServerResponseAllOf {
    /**
     * A description for this External Server
     * @type {string}
     * @memberof ApiExternalServerResponseAllOf
     */
    'description'?: string;
    /**
     * 
     * @type {Array<EnumapiExternalServerSchemaUrn>}
     * @memberof ApiExternalServerResponseAllOf
     */
    'schemas'?: Array<EnumapiExternalServerSchemaUrn>;
    /**
     * Name of the External Server
     * @type {string}
     * @memberof ApiExternalServerResponseAllOf
     */
    'id'?: string;
    /**
     * The base URL of the external server, optionally including port number, for example \"https://externalService:9031\".
     * @type {string}
     * @memberof ApiExternalServerResponseAllOf
     */
    'baseURL'?: string;
    /**
     * The mechanism for checking if the hostname of the API External Server matches the name(s) stored inside the server\'s X.509 certificate. This is only applicable if SSL is being used for connection security.
     * @type {EnumexternalServerApiHostnameVerificationMethodProp}
     * @memberof ApiExternalServerResponseAllOf
     */
    'hostnameVerificationMethod'?: EnumexternalServerApiHostnameVerificationMethodProp;
    /**
     * The key manager provider to use if SSL (HTTPS) is to be used for connection-level security. When specifying a value for this property (except when using the Null key manager provider) you must ensure that the external server trusts this server\'s public certificate by adding this server\'s public certificate to the external server\'s trust store.
     * @type {string}
     * @memberof ApiExternalServerResponseAllOf
     */
    'keyManagerProvider'?: string;
    /**
     * The trust manager provider to use if SSL (HTTPS) is to be used for connection-level security.
     * @type {string}
     * @memberof ApiExternalServerResponseAllOf
     */
    'trustManagerProvider'?: string;
    /**
     * A list of HTTP headers that will be forwarded by the PingAuthorize Server to the downstream API server.
     * @type {Array<string>}
     * @memberof ApiExternalServerResponseAllOf
     */
    'allowedHeader'?: Array<string>;
    /**
     * The name of the login account to use for HTTP requests to the downstream API server using basic authentication. This property is ignored unless an associated Gateway API Endpoint\'s http-auth-evaluation-behavior property is set to \"evaluate-and-replace\".
     * @type {string}
     * @memberof ApiExternalServerResponseAllOf
     */
    'userName'?: string;
    /**
     * The name of the login password to use for HTTP requests to the downstream API server using basic authentication. This property is ignored unless an associated Gateway API Endpoint\'s http-auth-evaluation-behavior property is set to \"evaluate-and-replace\".
     * @type {string}
     * @memberof ApiExternalServerResponseAllOf
     */
    'password'?: string;
    /**
     * The certificate alias within the keystore to use if SSL (HTTPS) is to be used for connection-level security. When specifying a value for this property you must ensure that the external server trusts this server\'s public certificate by adding this server\'s public certificate to the external server\'s trust store.
     * @type {string}
     * @memberof ApiExternalServerResponseAllOf
     */
    'sslCertNickname'?: string;
    /**
     * Specifies the maximum length of time to wait for a connection to be established before aborting a request to the server.
     * @type {string}
     * @memberof ApiExternalServerResponseAllOf
     */
    'connectTimeout'?: string;
    /**
     * Specifies the maximum length of time to wait for response data to be read from an established connection before aborting a request to the server.
     * @type {string}
     * @memberof ApiExternalServerResponseAllOf
     */
    'responseTimeout'?: string;
}

