/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

The version of the OpenAPI document: 0.1


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { EnumconnectionCriteriaAllIncludedUserPrivilegeProp } from './enumconnection-criteria-all-included-user-privilege-prop';
import { EnumconnectionCriteriaAnyIncludedUserPrivilegeProp } from './enumconnection-criteria-any-included-user-privilege-prop';
import { EnumconnectionCriteriaAuthenticationSecurityLevelProp } from './enumconnection-criteria-authentication-security-level-prop';
import { EnumconnectionCriteriaCommunicationSecurityLevelProp } from './enumconnection-criteria-communication-security-level-prop';
import { EnumconnectionCriteriaNoneIncludedUserPrivilegeProp } from './enumconnection-criteria-none-included-user-privilege-prop';
import { EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp } from './enumconnection-criteria-not-all-included-user-privilege-prop';
import { EnumconnectionCriteriaUserAuthTypeProp } from './enumconnection-criteria-user-auth-type-prop';
import { EnumsimpleConnectionCriteriaSchemaUrn } from './enumsimple-connection-criteria-schema-urn';

/**
 * 
 * @export
 * @interface SimpleConnectionCriteriaShared
 */
export interface SimpleConnectionCriteriaShared {
    /**
     * A description for this Connection Criteria
     * @type {string}
     * @memberof SimpleConnectionCriteriaShared
     */
    'description'?: string;
    /**
     * 
     * @type {Array<EnumsimpleConnectionCriteriaSchemaUrn>}
     * @memberof SimpleConnectionCriteriaShared
     */
    'schemas': Array<EnumsimpleConnectionCriteriaSchemaUrn>;
    /**
     * Specifies an address mask that may be used to specify a set of clients that should be included in this Simple Connection Criteria.
     * @type {Array<string>}
     * @memberof SimpleConnectionCriteriaShared
     */
    'includedClientAddress'?: Array<string>;
    /**
     * Specifies an address mask that may be used to specify a set of clients that should be excluded from this Simple Connection Criteria.
     * @type {Array<string>}
     * @memberof SimpleConnectionCriteriaShared
     */
    'excludedClientAddress'?: Array<string>;
    /**
     * Specifies a connection handler for clients that should be included in this Simple Connection Criteria.
     * @type {Array<string>}
     * @memberof SimpleConnectionCriteriaShared
     */
    'includedConnectionHandler'?: Array<string>;
    /**
     * Specifies a connection handler for clients that should be excluded from this Simple Connection Criteria.
     * @type {Array<string>}
     * @memberof SimpleConnectionCriteriaShared
     */
    'excludedConnectionHandler'?: Array<string>;
    /**
     * Specifies the name of a communication protocol that should be used by clients included in this Simple Connection Criteria.
     * @type {Array<string>}
     * @memberof SimpleConnectionCriteriaShared
     */
    'includedProtocol'?: Array<string>;
    /**
     * Specifies the name of a communication protocol that should be used by clients excluded from this Simple Connection Criteria.
     * @type {Array<string>}
     * @memberof SimpleConnectionCriteriaShared
     */
    'excludedProtocol'?: Array<string>;
    /**
     * Indicates whether this Simple Connection Criteria should require or allow clients using a secure communication channel.
     * @type {EnumconnectionCriteriaCommunicationSecurityLevelProp}
     * @memberof SimpleConnectionCriteriaShared
     */
    'communicationSecurityLevel'?: EnumconnectionCriteriaCommunicationSecurityLevelProp;
    /**
     * 
     * @type {Array<EnumconnectionCriteriaUserAuthTypeProp>}
     * @memberof SimpleConnectionCriteriaShared
     */
    'userAuthType'?: Array<EnumconnectionCriteriaUserAuthTypeProp>;
    /**
     * Indicates whether this Simple Connection Criteria should require or allow clients that authenticated using a secure manner. This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections.
     * @type {EnumconnectionCriteriaAuthenticationSecurityLevelProp}
     * @memberof SimpleConnectionCriteriaShared
     */
    'authenticationSecurityLevel'?: EnumconnectionCriteriaAuthenticationSecurityLevelProp;
    /**
     * Specifies the name of a SASL mechanism that should be used by clients included in this Simple Connection Criteria. This will only be taken into account for client connections that have authenticated to the server using a SASL mechanism and will be ignored for unauthenticated client connections and for client connections that authenticated using some other method (e.g., those performing simple or internal authentication).
     * @type {Array<string>}
     * @memberof SimpleConnectionCriteriaShared
     */
    'includedUserSASLMechanism'?: Array<string>;
    /**
     * Specifies the name of a SASL mechanism that should be used by clients excluded from this Simple Connection Criteria. This will only be taken into account for client connections that have authenticated to the server using a SASL mechanism and will be ignored for unauthenticated client connections and for client connections that authenticated using some other method (e.g., those performing simple or internal authentication).
     * @type {Array<string>}
     * @memberof SimpleConnectionCriteriaShared
     */
    'excludedUserSASLMechanism'?: Array<string>;
    /**
     * Specifies a base DN below which authenticated user entries may exist for clients included in this Simple Connection Criteria. This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections. Refer to the authz version of this property in Simple Result Criteria if operations are being proxied (performed using proxied authorization), and you need to match the originating user of the operation rather than the proxy user (the user the proxy authenticated as).
     * @type {Array<string>}
     * @memberof SimpleConnectionCriteriaShared
     */
    'includedUserBaseDN'?: Array<string>;
    /**
     * Specifies a base DN below which authenticated user entries may exist for clients excluded from this Simple Connection Criteria. This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections. Refer to the authz version of this property in Simple Result Criteria if operations are being proxied (performed using proxied authorization), and you need to match the originating user of the operation rather than the proxy user (the user the proxy authenticated as).
     * @type {Array<string>}
     * @memberof SimpleConnectionCriteriaShared
     */
    'excludedUserBaseDN'?: Array<string>;
    /**
     * Specifies the DN of a group in which authenticated users must exist for clients included in this Simple Connection Criteria. If any group DNs are provided, then the authenticated user must be a member of all of those groups. This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections. Refer to the authz version of this property in Simple Result Criteria if operations are being proxied (performed using proxied authorization), and you need to match the originating user of the operation rather than the proxy user (the user the proxy authenticated as).
     * @type {Array<string>}
     * @memberof SimpleConnectionCriteriaShared
     */
    'allIncludedUserGroupDN'?: Array<string>;
    /**
     * Specifies the DN of a group in which authenticated users may exist for clients included in this Simple Connection Criteria. If any group DNs are provided, then the authenticated user must be a member of at least one of those groups. This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections. Refer to the authz version of this property in Simple Result Criteria if operations are being proxied (performed using proxied authorization), and you need to match the originating user of the operation rather than the proxy user (the user the proxy authenticated as).
     * @type {Array<string>}
     * @memberof SimpleConnectionCriteriaShared
     */
    'anyIncludedUserGroupDN'?: Array<string>;
    /**
     * Specifies the DN of a group in which authenticated users should not exist for clients included in this Simple Connection Criteria. If any group DNs are provided, then the authenticated user must not be a member of at least one of those groups (that is, the user may be a member of zero or more of those groups, but not of all of them). This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections. Refer to the authz version of this property in Simple Result Criteria if operations are being proxied (performed using proxied authorization), and you need to match the originating user of the operation rather than the proxy user (the user the proxy authenticated as).
     * @type {Array<string>}
     * @memberof SimpleConnectionCriteriaShared
     */
    'notAllIncludedUserGroupDN'?: Array<string>;
    /**
     * Specifies the DN of a group in which authenticated users must not exist for clients included in this Simple Connection Criteria. If any group DNs are provided, then the authenticated user must not be a member any of those groups. This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections. Refer to the authz version of this property in Simple Result Criteria if operations are being proxied (performed using proxied authorization), and you need to match the originating user of the operation rather than the proxy user (the user the proxy authenticated as).
     * @type {Array<string>}
     * @memberof SimpleConnectionCriteriaShared
     */
    'noneIncludedUserGroupDN'?: Array<string>;
    /**
     * Specifies a search filter that must match the entry of the authenticated user for clients included in this Simple Connection Criteria. If any filters are provided, then all of those filters must match the authenticated user entry. This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections.
     * @type {Array<string>}
     * @memberof SimpleConnectionCriteriaShared
     */
    'allIncludedUserFilter'?: Array<string>;
    /**
     * Specifies a search filter that may match the entry of the authenticated user for clients included in this Simple Connection Criteria. If any filters are provided, then at least one of those filters must match the authenticated user entry. This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections.
     * @type {Array<string>}
     * @memberof SimpleConnectionCriteriaShared
     */
    'anyIncludedUserFilter'?: Array<string>;
    /**
     * Specifies a search filter that should not match the entry of the authenticated user for clients included in this Simple Connection Criteria. If any filters are provided, then at least one of those filters must not match the authenticated user entry (that is, the user entry may match zero or more of those filters, but not all of them). This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections.
     * @type {Array<string>}
     * @memberof SimpleConnectionCriteriaShared
     */
    'notAllIncludedUserFilter'?: Array<string>;
    /**
     * Specifies a search filter that must not match the entry of the authenticated user for clients included in this Simple Connection Criteria. If any filters are provided, then none of those filters may match the authenticated user entry. This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections.
     * @type {Array<string>}
     * @memberof SimpleConnectionCriteriaShared
     */
    'noneIncludedUserFilter'?: Array<string>;
    /**
     * 
     * @type {Array<EnumconnectionCriteriaAllIncludedUserPrivilegeProp>}
     * @memberof SimpleConnectionCriteriaShared
     */
    'allIncludedUserPrivilege'?: Array<EnumconnectionCriteriaAllIncludedUserPrivilegeProp>;
    /**
     * 
     * @type {Array<EnumconnectionCriteriaAnyIncludedUserPrivilegeProp>}
     * @memberof SimpleConnectionCriteriaShared
     */
    'anyIncludedUserPrivilege'?: Array<EnumconnectionCriteriaAnyIncludedUserPrivilegeProp>;
    /**
     * 
     * @type {Array<EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp>}
     * @memberof SimpleConnectionCriteriaShared
     */
    'notAllIncludedUserPrivilege'?: Array<EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp>;
    /**
     * 
     * @type {Array<EnumconnectionCriteriaNoneIncludedUserPrivilegeProp>}
     * @memberof SimpleConnectionCriteriaShared
     */
    'noneIncludedUserPrivilege'?: Array<EnumconnectionCriteriaNoneIncludedUserPrivilegeProp>;
}

