/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

The version of the OpenAPI document: 0.1


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { EnumdigestMd5SaslMechanismHandlerSchemaUrn } from './enumdigest-md5-sasl-mechanism-handler-schema-urn';

/**
 * 
 * @export
 * @interface DigestMd5SaslMechanismHandlerResponseAllOf
 */
export interface DigestMd5SaslMechanismHandlerResponseAllOf {
    /**
     * A description for this SASL Mechanism Handler
     * @type {string}
     * @memberof DigestMd5SaslMechanismHandlerResponseAllOf
     */
    'description'?: string;
    /**
     * 
     * @type {Array<EnumdigestMd5SaslMechanismHandlerSchemaUrn>}
     * @memberof DigestMd5SaslMechanismHandlerResponseAllOf
     */
    'schemas'?: Array<EnumdigestMd5SaslMechanismHandlerSchemaUrn>;
    /**
     * Name of the SASL Mechanism Handler
     * @type {string}
     * @memberof DigestMd5SaslMechanismHandlerResponseAllOf
     */
    'id'?: string;
    /**
     * Specifies the realm that is to be used by the server for DIGEST-MD5 authentication.
     * @type {string}
     * @memberof DigestMd5SaslMechanismHandlerResponseAllOf
     */
    'realm'?: string;
    /**
     * Specifies the name of the identity mapper that is to be used with this SASL mechanism handler to match the authentication or authorization ID included in the SASL bind request to the corresponding user in the directory.
     * @type {string}
     * @memberof DigestMd5SaslMechanismHandlerResponseAllOf
     */
    'identityMapper'?: string;
    /**
     * Specifies the DNS-resolvable fully-qualified domain name for the server that is used when validating the digest-uri parameter during the authentication process.
     * @type {string}
     * @memberof DigestMd5SaslMechanismHandlerResponseAllOf
     */
    'serverFqdn'?: string;
    /**
     * Indicates whether the SASL mechanism handler is enabled for use.
     * @type {boolean}
     * @memberof DigestMd5SaslMechanismHandlerResponseAllOf
     */
    'enabled'?: boolean;
}

