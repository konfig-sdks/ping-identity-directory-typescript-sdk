/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

The version of the OpenAPI document: 0.1


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { EnumalertHandlerDisabledAlertTypeProp } from './enumalert-handler-disabled-alert-type-prop';
import { EnumalertHandlerEnabledAlertSeverityProp } from './enumalert-handler-enabled-alert-severity-prop';
import { EnumalertHandlerEnabledAlertTypeProp } from './enumalert-handler-enabled-alert-type-prop';
import { EnumsnmpAlertHandlerSchemaUrn } from './enumsnmp-alert-handler-schema-urn';

/**
 * 
 * @export
 * @interface SnmpAlertHandlerShared
 */
export interface SnmpAlertHandlerShared {
    /**
     * A description for this Alert Handler
     * @type {string}
     * @memberof SnmpAlertHandlerShared
     */
    'description'?: string;
    /**
     * 
     * @type {Array<EnumsnmpAlertHandlerSchemaUrn>}
     * @memberof SnmpAlertHandlerShared
     */
    'schemas': Array<EnumsnmpAlertHandlerSchemaUrn>;
    /**
     * Indicates whether the server should attempt to invoke this SNMP Alert Handler in a background thread so that any potentially-expensive processing (e.g., performing network communication to deliver the alert notification) will not delay whatever processing the server was performing when the alert was generated.
     * @type {boolean}
     * @memberof SnmpAlertHandlerShared
     */
    'asynchronous'?: boolean;
    /**
     * Specifies the address of the SNMP agent to which traps will be sent.
     * @type {string}
     * @memberof SnmpAlertHandlerShared
     */
    'serverHostName': string;
    /**
     * Specifies the port number of the SNMP agent to which traps will be sent.
     * @type {number}
     * @memberof SnmpAlertHandlerShared
     */
    'serverPort'?: number;
    /**
     * Specifies the name of the community to which the traps will be sent.
     * @type {string}
     * @memberof SnmpAlertHandlerShared
     */
    'communityName'?: string;
    /**
     * Indicates whether the Alert Handler is enabled.
     * @type {boolean}
     * @memberof SnmpAlertHandlerShared
     */
    'enabled': boolean;
    /**
     * 
     * @type {Array<EnumalertHandlerEnabledAlertSeverityProp>}
     * @memberof SnmpAlertHandlerShared
     */
    'enabledAlertSeverity'?: Array<EnumalertHandlerEnabledAlertSeverityProp>;
    /**
     * 
     * @type {Array<EnumalertHandlerEnabledAlertTypeProp>}
     * @memberof SnmpAlertHandlerShared
     */
    'enabledAlertType'?: Array<EnumalertHandlerEnabledAlertTypeProp>;
    /**
     * 
     * @type {Array<EnumalertHandlerDisabledAlertTypeProp>}
     * @memberof SnmpAlertHandlerShared
     */
    'disabledAlertType'?: Array<EnumalertHandlerDisabledAlertTypeProp>;
}

