/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

The version of the OpenAPI document: 0.1


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { EnumlogPublisherCompressionMechanismProp } from './enumlog-publisher-compression-mechanism-prop';
import { EnumlogPublisherLoggingErrorBehaviorProp } from './enumlog-publisher-logging-error-behavior-prop';
import { EnumoperationTimingAccessLogPublisherSchemaUrn } from './enumoperation-timing-access-log-publisher-schema-urn';

/**
 * 
 * @export
 * @interface OperationTimingAccessLogPublisherShared
 */
export interface OperationTimingAccessLogPublisherShared {
    /**
     * A description for this Log Publisher
     * @type {string}
     * @memberof OperationTimingAccessLogPublisherShared
     */
    'description'?: string;
    /**
     * 
     * @type {Array<EnumoperationTimingAccessLogPublisherSchemaUrn>}
     * @memberof OperationTimingAccessLogPublisherShared
     */
    'schemas': Array<EnumoperationTimingAccessLogPublisherSchemaUrn>;
    /**
     * The file name to use for the log files generated by the Operation Timing Access Log Publisher. The path to the file can be specified either as relative to the server root or as an absolute path.
     * @type {string}
     * @memberof OperationTimingAccessLogPublisherShared
     */
    'logFile': string;
    /**
     * The UNIX permissions of the log files created by this Operation Timing Access Log Publisher.
     * @type {string}
     * @memberof OperationTimingAccessLogPublisherShared
     */
    'logFilePermissions'?: string;
    /**
     * The rotation policy to use for the Operation Timing Access Log Publisher .
     * @type {Array<string>}
     * @memberof OperationTimingAccessLogPublisherShared
     */
    'rotationPolicy'?: Array<string>;
    /**
     * A listener that should be notified whenever a log file is rotated out of service.
     * @type {Array<string>}
     * @memberof OperationTimingAccessLogPublisherShared
     */
    'rotationListener'?: Array<string>;
    /**
     * The retention policy to use for the Operation Timing Access Log Publisher .
     * @type {Array<string>}
     * @memberof OperationTimingAccessLogPublisherShared
     */
    'retentionPolicy'?: Array<string>;
    /**
     * Specifies the type of compression (if any) to use for log files that are written.
     * @type {EnumlogPublisherCompressionMechanismProp}
     * @memberof OperationTimingAccessLogPublisherShared
     */
    'compressionMechanism'?: EnumlogPublisherCompressionMechanismProp;
    /**
     * Indicates whether the log should be cryptographically signed so that the log content cannot be altered in an undetectable manner.
     * @type {boolean}
     * @memberof OperationTimingAccessLogPublisherShared
     */
    'signLog'?: boolean;
    /**
     * Indicates whether log files should be encrypted so that their content is not available to unauthorized users.
     * @type {boolean}
     * @memberof OperationTimingAccessLogPublisherShared
     */
    'encryptLog'?: boolean;
    /**
     * Specifies the ID of the encryption settings definition that should be used to encrypt the data. If this is not provided, the server\'s preferred encryption settings definition will be used. The \"encryption-settings list\" command can be used to obtain a list of the encryption settings definitions available in the server.
     * @type {string}
     * @memberof OperationTimingAccessLogPublisherShared
     */
    'encryptionSettingsDefinitionID'?: string;
    /**
     * Specifies whether to append to existing log files.
     * @type {boolean}
     * @memberof OperationTimingAccessLogPublisherShared
     */
    'append'?: boolean;
    /**
     * Indicates whether log messages should include the product name for the Directory Server.
     * @type {boolean}
     * @memberof OperationTimingAccessLogPublisherShared
     */
    'includeProductName'?: boolean;
    /**
     * Indicates whether log messages should include the instance name for the Directory Server.
     * @type {boolean}
     * @memberof OperationTimingAccessLogPublisherShared
     */
    'includeInstanceName'?: boolean;
    /**
     * Indicates whether log messages should include the startup ID for the Directory Server, which is a value assigned to the server instance at startup and may be used to identify when the server has been restarted.
     * @type {boolean}
     * @memberof OperationTimingAccessLogPublisherShared
     */
    'includeStartupID'?: boolean;
    /**
     * Indicates whether log messages should include the thread ID for the Directory Server in each log message. This ID can be used to correlate log messages from the same thread within a single log as well as generated by the same thread across different types of log files. More information about the thread with a specific ID can be obtained using the cn=JVM Stack Trace,cn=monitor entry.
     * @type {boolean}
     * @memberof OperationTimingAccessLogPublisherShared
     */
    'includeThreadID'?: boolean;
    /**
     * Indicates whether log messages for operation requests should include the IP address of the client that requested the operation.
     * @type {boolean}
     * @memberof OperationTimingAccessLogPublisherShared
     */
    'includeRequesterIPAddress'?: boolean;
    /**
     * Indicates whether log messages should include the DN of the authenticated user for the client connection on which the operation was requested.
     * @type {boolean}
     * @memberof OperationTimingAccessLogPublisherShared
     */
    'includeRequesterDN'?: boolean;
    /**
     * The minimum processing time (i.e., \"etime\") for operations that should be logged by this Operation Timing Access Log Publisher
     * @type {string}
     * @memberof OperationTimingAccessLogPublisherShared
     */
    'minIncludedOperationProcessingTime'?: string;
    /**
     * The minimum length of time in nanoseconds that an operation phase should take before it is included in a log message.
     * @type {number}
     * @memberof OperationTimingAccessLogPublisherShared
     */
    'minIncludedPhaseTimeNanos'?: number;
    /**
     * Indicates whether the Operation Timing Access Log Publisher will publish records asynchronously.
     * @type {boolean}
     * @memberof OperationTimingAccessLogPublisherShared
     */
    'asynchronous'?: boolean;
    /**
     * Specifies whether to flush the writer after every log record.
     * @type {boolean}
     * @memberof OperationTimingAccessLogPublisherShared
     */
    'autoFlush'?: boolean;
    /**
     * Specifies the log file buffer size.
     * @type {string}
     * @memberof OperationTimingAccessLogPublisherShared
     */
    'bufferSize'?: string;
    /**
     * Specifies the maximum number of characters that may be included in any string in a log message before that string is truncated and replaced with a placeholder indicating the number of characters that were omitted. This can help prevent extremely long log messages from being written.
     * @type {number}
     * @memberof OperationTimingAccessLogPublisherShared
     */
    'maxStringLength'?: number;
    /**
     * The maximum number of log records that can be stored in the asynchronous queue.
     * @type {number}
     * @memberof OperationTimingAccessLogPublisherShared
     */
    'queueSize'?: number;
    /**
     * Specifies the interval at which to check whether the log files need to be rotated.
     * @type {string}
     * @memberof OperationTimingAccessLogPublisherShared
     */
    'timeInterval'?: string;
    /**
     * Indicates whether to log information about the result of any security negotiation (e.g., SSL handshake) processing that has been performed.
     * @type {boolean}
     * @memberof OperationTimingAccessLogPublisherShared
     */
    'logSecurityNegotiation'?: boolean;
    /**
     * Indicates whether to log information about intermediate responses sent to the client.
     * @type {boolean}
     * @memberof OperationTimingAccessLogPublisherShared
     */
    'logIntermediateResponses'?: boolean;
    /**
     * Indicates whether internal operations (for example, operations that are initiated by plugins) should be logged along with the operations that are requested by users.
     * @type {boolean}
     * @memberof OperationTimingAccessLogPublisherShared
     */
    'suppressInternalOperations'?: boolean;
    /**
     * Indicates whether access messages that are generated by replication operations should be suppressed.
     * @type {boolean}
     * @memberof OperationTimingAccessLogPublisherShared
     */
    'suppressReplicationOperations'?: boolean;
    /**
     * Specifies a set of connection criteria that must match the associated client connection in order for a connect, disconnect, request, or result message to be logged.
     * @type {string}
     * @memberof OperationTimingAccessLogPublisherShared
     */
    'connectionCriteria'?: string;
    /**
     * Specifies a set of request criteria that must match the associated operation request in order for a request or result to be logged by this Access Log Publisher.
     * @type {string}
     * @memberof OperationTimingAccessLogPublisherShared
     */
    'requestCriteria'?: string;
    /**
     * Specifies a set of result criteria that must match the associated operation result in order for that result to be logged by this Access Log Publisher.
     * @type {string}
     * @memberof OperationTimingAccessLogPublisherShared
     */
    'resultCriteria'?: string;
    /**
     * Indicates whether the Log Publisher is enabled for use.
     * @type {boolean}
     * @memberof OperationTimingAccessLogPublisherShared
     */
    'enabled': boolean;
    /**
     * Specifies the behavior that the server should exhibit if an error occurs during logging processing.
     * @type {EnumlogPublisherLoggingErrorBehaviorProp}
     * @memberof OperationTimingAccessLogPublisherShared
     */
    'loggingErrorBehavior'?: EnumlogPublisherLoggingErrorBehaviorProp;
}

