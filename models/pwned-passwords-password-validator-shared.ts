/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

The version of the OpenAPI document: 0.1


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { EnumpwnedPasswordsPasswordValidatorSchemaUrn } from './enumpwned-passwords-password-validator-schema-urn';

/**
 * 
 * @export
 * @interface PwnedPasswordsPasswordValidatorShared
 */
export interface PwnedPasswordsPasswordValidatorShared {
    /**
     * A description for this Password Validator
     * @type {string}
     * @memberof PwnedPasswordsPasswordValidatorShared
     */
    'description'?: string;
    /**
     * 
     * @type {Array<EnumpwnedPasswordsPasswordValidatorSchemaUrn>}
     * @memberof PwnedPasswordsPasswordValidatorShared
     */
    'schemas': Array<EnumpwnedPasswordsPasswordValidatorSchemaUrn>;
    /**
     * The base URL for requests used to interact with the Pwned Passwords service. The first five characters of the hexadecimal representation of the unsalted SHA-1 digest of a proposed password will be appended to this base URL to construct the HTTP GET request used to obtain information about potential matches.
     * @type {string}
     * @memberof PwnedPasswordsPasswordValidatorShared
     */
    'pwnedPasswordsBaseURL'?: string;
    /**
     * A reference to an HTTP proxy server that should be used for requests sent to the Pwned Passwords service.
     * @type {string}
     * @memberof PwnedPasswordsPasswordValidatorShared
     */
    'httpProxyExternalServer'?: string;
    /**
     * The maximum length of time to wait to obtain an HTTP connection.
     * @type {string}
     * @memberof PwnedPasswordsPasswordValidatorShared
     */
    'httpConnectTimeout'?: string;
    /**
     * The maximum length of time to wait for a response to an HTTP request.
     * @type {string}
     * @memberof PwnedPasswordsPasswordValidatorShared
     */
    'httpResponseTimeout'?: string;
    /**
     * Indicates whether this password validator should be used to validate clear-text passwords provided in LDAP add requests.
     * @type {boolean}
     * @memberof PwnedPasswordsPasswordValidatorShared
     */
    'invokeForAdd'?: boolean;
    /**
     * Indicates whether this password validator should be used to validate clear-text passwords provided by an end user in the course of changing their own password.
     * @type {boolean}
     * @memberof PwnedPasswordsPasswordValidatorShared
     */
    'invokeForSelfChange'?: boolean;
    /**
     * Indicates whether this password validator should be used to validate clear-text passwords provided by administrators when changing the password for another user.
     * @type {boolean}
     * @memberof PwnedPasswordsPasswordValidatorShared
     */
    'invokeForAdminReset'?: boolean;
    /**
     * Indicates whether to accept the proposed password if an error occurs while attempting to interact with the Pwned Passwords service.
     * @type {boolean}
     * @memberof PwnedPasswordsPasswordValidatorShared
     */
    'acceptPasswordOnServiceError'?: boolean;
    /**
     * Specifies which key manager provider should be used to obtain a client certificate to present to the validation server when performing HTTPS communication. This may be left undefined if communication will not be secured with HTTPS, or if there is no need to present a client certificate to the validation service.
     * @type {string}
     * @memberof PwnedPasswordsPasswordValidatorShared
     */
    'keyManagerProvider'?: string;
    /**
     * Specifies which trust manager provider should be used to determine whether to trust the certificate presented by the server when performing HTTPS communication. This may be left undefined if HTTPS communication is not needed, or if the validation service presents a certificate that is trusted by the default JVM configuration (which should be the case for the Pwned Password servers).
     * @type {string}
     * @memberof PwnedPasswordsPasswordValidatorShared
     */
    'trustManagerProvider'?: string;
    /**
     * Indicates whether the password validator is enabled for use.
     * @type {boolean}
     * @memberof PwnedPasswordsPasswordValidatorShared
     */
    'enabled': boolean;
    /**
     * Specifies a message that can be used to describe the requirements imposed by this password validator to end users. If a value is provided for this property, then it will override any description that may have otherwise been generated by the validator.
     * @type {string}
     * @memberof PwnedPasswordsPasswordValidatorShared
     */
    'validatorRequirementDescription'?: string;
    /**
     * Specifies a message that may be provided to the end user in the event that a proposed password is rejected by this validator. If a value is provided for this property, then it will override any failure message that may have otherwise been generated by the validator.
     * @type {string}
     * @memberof PwnedPasswordsPasswordValidatorShared
     */
    'validatorFailureMessage'?: string;
}

