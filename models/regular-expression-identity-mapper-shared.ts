/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

The version of the OpenAPI document: 0.1


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { EnumregularExpressionIdentityMapperSchemaUrn } from './enumregular-expression-identity-mapper-schema-urn';

/**
 * 
 * @export
 * @interface RegularExpressionIdentityMapperShared
 */
export interface RegularExpressionIdentityMapperShared {
    /**
     * A description for this Identity Mapper
     * @type {string}
     * @memberof RegularExpressionIdentityMapperShared
     */
    'description'?: string;
    /**
     * 
     * @type {Array<EnumregularExpressionIdentityMapperSchemaUrn>}
     * @memberof RegularExpressionIdentityMapperShared
     */
    'schemas': Array<EnumregularExpressionIdentityMapperSchemaUrn>;
    /**
     * Specifies the name or OID of the attribute whose value should match the provided identifier string after it has been processed by the associated regular expression.
     * @type {Array<string>}
     * @memberof RegularExpressionIdentityMapperShared
     */
    'matchAttribute'?: Array<string>;
    /**
     * Specifies the base DN(s) that should be used when performing searches to map the provided ID string to a user entry. If multiple values are given, searches are performed below all the specified base DNs.
     * @type {Array<string>}
     * @memberof RegularExpressionIdentityMapperShared
     */
    'matchBaseDN'?: Array<string>;
    /**
     * An optional filter that mapped users must match.
     * @type {string}
     * @memberof RegularExpressionIdentityMapperShared
     */
    'matchFilter'?: string;
    /**
     * Specifies the regular expression pattern that is used to identify portions of the ID string that will be replaced.
     * @type {string}
     * @memberof RegularExpressionIdentityMapperShared
     */
    'matchPattern': string;
    /**
     * Specifies the replacement pattern that should be used for substrings in the ID string that match the provided regular expression pattern.
     * @type {string}
     * @memberof RegularExpressionIdentityMapperShared
     */
    'replacePattern'?: string;
    /**
     * Indicates whether the Identity Mapper is enabled for use.
     * @type {boolean}
     * @memberof RegularExpressionIdentityMapperShared
     */
    'enabled': boolean;
}

