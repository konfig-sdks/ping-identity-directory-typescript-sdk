/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

The version of the OpenAPI document: 0.1


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { EnumdataSecurityAuditorAuditSeverityProp } from './enumdata-security-auditor-audit-severity-prop';
import { EnumdataSecurityAuditorWeakCryptEncodingProp } from './enumdata-security-auditor-weak-crypt-encoding-prop';
import { EnumweaklyEncodedPasswordDataSecurityAuditorSchemaUrn } from './enumweakly-encoded-password-data-security-auditor-schema-urn';

/**
 * 
 * @export
 * @interface WeaklyEncodedPasswordDataSecurityAuditorShared
 */
export interface WeaklyEncodedPasswordDataSecurityAuditorShared {
    /**
     * 
     * @type {Array<EnumweaklyEncodedPasswordDataSecurityAuditorSchemaUrn>}
     * @memberof WeaklyEncodedPasswordDataSecurityAuditorShared
     */
    'schemas': Array<EnumweaklyEncodedPasswordDataSecurityAuditorSchemaUrn>;
    /**
     * Specifies the name of the detailed report file.
     * @type {string}
     * @memberof WeaklyEncodedPasswordDataSecurityAuditorShared
     */
    'reportFile'?: string;
    /**
     * The password storage schemes that are considered weak. Users with any of the specified password storage schemes will be included in the report.
     * @type {Array<string>}
     * @memberof WeaklyEncodedPasswordDataSecurityAuditorShared
     */
    'weakPasswordStorageScheme'?: Array<string>;
    /**
     * 
     * @type {Array<EnumdataSecurityAuditorWeakCryptEncodingProp>}
     * @memberof WeaklyEncodedPasswordDataSecurityAuditorShared
     */
    'weakCryptEncoding'?: Array<EnumdataSecurityAuditorWeakCryptEncodingProp>;
    /**
     * Indicates whether the Data Security Auditor is enabled for use.
     * @type {boolean}
     * @memberof WeaklyEncodedPasswordDataSecurityAuditorShared
     */
    'enabled'?: boolean;
    /**
     * Specifies the attributes from the audited entries that should be included detailed reports. By default, no attributes are included.
     * @type {Array<string>}
     * @memberof WeaklyEncodedPasswordDataSecurityAuditorShared
     */
    'includeAttribute'?: Array<string>;
    /**
     * Specifies which backends the data security auditor may be applied to. By default, the data security auditors will audit entries in all backend types that support data auditing (Local DB, LDIF, and Config File Handler).
     * @type {Array<string>}
     * @memberof WeaklyEncodedPasswordDataSecurityAuditorShared
     */
    'auditBackend'?: Array<string>;
    /**
     * Specifies the severity of events to include in the report.
     * @type {EnumdataSecurityAuditorAuditSeverityProp}
     * @memberof WeaklyEncodedPasswordDataSecurityAuditorShared
     */
    'auditSeverity'?: EnumdataSecurityAuditorAuditSeverityProp;
}

