/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

The version of the OpenAPI document: 0.1


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { EnumfileBasedPolicyQueryLogPublisherSchemaUrn } from './enumfile-based-policy-query-log-publisher-schema-urn';
import { EnumlogPublisherCompressionMechanismProp } from './enumlog-publisher-compression-mechanism-prop';
import { EnumlogPublisherLoggingErrorBehaviorProp } from './enumlog-publisher-logging-error-behavior-prop';

/**
 * 
 * @export
 * @interface FileBasedPolicyQueryLogPublisherResponseAllOf
 */
export interface FileBasedPolicyQueryLogPublisherResponseAllOf {
    /**
     * A description for this Log Publisher
     * @type {string}
     * @memberof FileBasedPolicyQueryLogPublisherResponseAllOf
     */
    'description'?: string;
    /**
     * 
     * @type {Array<EnumfileBasedPolicyQueryLogPublisherSchemaUrn>}
     * @memberof FileBasedPolicyQueryLogPublisherResponseAllOf
     */
    'schemas'?: Array<EnumfileBasedPolicyQueryLogPublisherSchemaUrn>;
    /**
     * Name of the Log Publisher
     * @type {string}
     * @memberof FileBasedPolicyQueryLogPublisherResponseAllOf
     */
    'id'?: string;
    /**
     * Indicates whether the File Based Policy Query Log Publisher will publish records asynchronously.
     * @type {boolean}
     * @memberof FileBasedPolicyQueryLogPublisherResponseAllOf
     */
    'asynchronous'?: boolean;
    /**
     * The maximum number of log records that can be stored in the asynchronous queue.
     * @type {number}
     * @memberof FileBasedPolicyQueryLogPublisherResponseAllOf
     */
    'queueSize'?: number;
    /**
     * Specifies the log file buffer size.
     * @type {string}
     * @memberof FileBasedPolicyQueryLogPublisherResponseAllOf
     */
    'bufferSize'?: string;
    /**
     * Specifies the interval at which to check whether the log files need to be rotated.
     * @type {string}
     * @memberof FileBasedPolicyQueryLogPublisherResponseAllOf
     */
    'timeInterval'?: string;
    /**
     * The file name to use for the log files generated by the File Based Policy Query Log Publisher. The path to the file can be specified either as relative to the server root or as an absolute path.
     * @type {string}
     * @memberof FileBasedPolicyQueryLogPublisherResponseAllOf
     */
    'logFile'?: string;
    /**
     * The UNIX permissions of the log files created by this File Based Policy Query Log Publisher.
     * @type {string}
     * @memberof FileBasedPolicyQueryLogPublisherResponseAllOf
     */
    'logFilePermissions'?: string;
    /**
     * The rotation policy to use for the File Based Policy Query Log Publisher .
     * @type {Array<string>}
     * @memberof FileBasedPolicyQueryLogPublisherResponseAllOf
     */
    'rotationPolicy'?: Array<string>;
    /**
     * A listener that should be notified whenever a log file is rotated out of service.
     * @type {Array<string>}
     * @memberof FileBasedPolicyQueryLogPublisherResponseAllOf
     */
    'rotationListener'?: Array<string>;
    /**
     * The retention policy to use for the File Based Policy Query Log Publisher .
     * @type {Array<string>}
     * @memberof FileBasedPolicyQueryLogPublisherResponseAllOf
     */
    'retentionPolicy'?: Array<string>;
    /**
     * Specifies the type of compression (if any) to use for log files that are written.
     * @type {EnumlogPublisherCompressionMechanismProp}
     * @memberof FileBasedPolicyQueryLogPublisherResponseAllOf
     */
    'compressionMechanism'?: EnumlogPublisherCompressionMechanismProp;
    /**
     * Indicates whether the log should be cryptographically signed so that the log content cannot be altered in an undetectable manner.
     * @type {boolean}
     * @memberof FileBasedPolicyQueryLogPublisherResponseAllOf
     */
    'signLog'?: boolean;
    /**
     * Indicates whether log files should be encrypted so that their content is not available to unauthorized users.
     * @type {boolean}
     * @memberof FileBasedPolicyQueryLogPublisherResponseAllOf
     */
    'encryptLog'?: boolean;
    /**
     * Specifies the ID of the encryption settings definition that should be used to encrypt the data. If this is not provided, the server\'s preferred encryption settings definition will be used. The \"encryption-settings list\" command can be used to obtain a list of the encryption settings definitions available in the server.
     * @type {string}
     * @memberof FileBasedPolicyQueryLogPublisherResponseAllOf
     */
    'encryptionSettingsDefinitionID'?: string;
    /**
     * Specifies whether to append to existing log files.
     * @type {boolean}
     * @memberof FileBasedPolicyQueryLogPublisherResponseAllOf
     */
    'append'?: boolean;
    /**
     * Specifies whether Policy Query messages recorded by the log publisher will include full responses from the PDP.
     * @type {boolean}
     * @memberof FileBasedPolicyQueryLogPublisherResponseAllOf
     */
    'includeQueryResponse'?: boolean;
    /**
     * Indicates whether the Log Publisher is enabled for use.
     * @type {boolean}
     * @memberof FileBasedPolicyQueryLogPublisherResponseAllOf
     */
    'enabled'?: boolean;
    /**
     * Specifies the behavior that the server should exhibit if an error occurs during logging processing.
     * @type {EnumlogPublisherLoggingErrorBehaviorProp}
     * @memberof FileBasedPolicyQueryLogPublisherResponseAllOf
     */
    'loggingErrorBehavior'?: EnumlogPublisherLoggingErrorBehaviorProp;
}

