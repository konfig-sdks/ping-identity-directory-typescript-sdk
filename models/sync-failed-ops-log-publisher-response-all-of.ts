/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

The version of the OpenAPI document: 0.1


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { EnumlogPublisherCompressionMechanismProp } from './enumlog-publisher-compression-mechanism-prop';
import { EnumlogPublisherLoggingErrorBehaviorProp } from './enumlog-publisher-logging-error-behavior-prop';
import { EnumsyncFailedOpsLogPublisherSchemaUrn } from './enumsync-failed-ops-log-publisher-schema-urn';

/**
 * 
 * @export
 * @interface SyncFailedOpsLogPublisherResponseAllOf
 */
export interface SyncFailedOpsLogPublisherResponseAllOf {
    /**
     * A description for this Log Publisher
     * @type {string}
     * @memberof SyncFailedOpsLogPublisherResponseAllOf
     */
    'description'?: string;
    /**
     * 
     * @type {Array<EnumsyncFailedOpsLogPublisherSchemaUrn>}
     * @memberof SyncFailedOpsLogPublisherResponseAllOf
     */
    'schemas'?: Array<EnumsyncFailedOpsLogPublisherSchemaUrn>;
    /**
     * Name of the Log Publisher
     * @type {string}
     * @memberof SyncFailedOpsLogPublisherResponseAllOf
     */
    'id'?: string;
    /**
     * The file name to use for the log files generated by the Sync Failed Ops Log Publisher. The path to the file can be specified either as relative to the server root or as an absolute path.
     * @type {string}
     * @memberof SyncFailedOpsLogPublisherResponseAllOf
     */
    'logFile'?: string;
    /**
     * The UNIX permissions of the log files created by this Sync Failed Ops Log Publisher.
     * @type {string}
     * @memberof SyncFailedOpsLogPublisherResponseAllOf
     */
    'logFilePermissions'?: string;
    /**
     * The rotation policy to use for the Sync Failed Ops Log Publisher .
     * @type {Array<string>}
     * @memberof SyncFailedOpsLogPublisherResponseAllOf
     */
    'rotationPolicy'?: Array<string>;
    /**
     * A listener that should be notified whenever a log file is rotated out of service.
     * @type {Array<string>}
     * @memberof SyncFailedOpsLogPublisherResponseAllOf
     */
    'rotationListener'?: Array<string>;
    /**
     * The retention policy to use for the Sync Failed Ops Log Publisher .
     * @type {Array<string>}
     * @memberof SyncFailedOpsLogPublisherResponseAllOf
     */
    'retentionPolicy'?: Array<string>;
    /**
     * Specifies the type of compression (if any) to use for log files that are written.
     * @type {EnumlogPublisherCompressionMechanismProp}
     * @memberof SyncFailedOpsLogPublisherResponseAllOf
     */
    'compressionMechanism'?: EnumlogPublisherCompressionMechanismProp;
    /**
     * Indicates whether the log should be cryptographically signed so that the log content cannot be altered in an undetectable manner.
     * @type {boolean}
     * @memberof SyncFailedOpsLogPublisherResponseAllOf
     */
    'signLog'?: boolean;
    /**
     * Indicates whether log files should be encrypted so that their content is not available to unauthorized users.
     * @type {boolean}
     * @memberof SyncFailedOpsLogPublisherResponseAllOf
     */
    'encryptLog'?: boolean;
    /**
     * Specifies the ID of the encryption settings definition that should be used to encrypt the data. If this is not provided, the server\'s preferred encryption settings definition will be used. The \"encryption-settings list\" command can be used to obtain a list of the encryption settings definitions available in the server.
     * @type {string}
     * @memberof SyncFailedOpsLogPublisherResponseAllOf
     */
    'encryptionSettingsDefinitionID'?: string;
    /**
     * Specifies whether to append to existing log files.
     * @type {boolean}
     * @memberof SyncFailedOpsLogPublisherResponseAllOf
     */
    'append'?: boolean;
    /**
     * Indicates whether the Sync Failed Ops Log Publisher will publish records asynchronously.
     * @type {boolean}
     * @memberof SyncFailedOpsLogPublisherResponseAllOf
     */
    'asynchronous'?: boolean;
    /**
     * Specifies whether to flush the writer after every log record.
     * @type {boolean}
     * @memberof SyncFailedOpsLogPublisherResponseAllOf
     */
    'autoFlush'?: boolean;
    /**
     * Specifies the log file buffer size.
     * @type {string}
     * @memberof SyncFailedOpsLogPublisherResponseAllOf
     */
    'bufferSize'?: string;
    /**
     * The maximum number of log records that can be stored in the asynchronous queue.
     * @type {number}
     * @memberof SyncFailedOpsLogPublisherResponseAllOf
     */
    'queueSize'?: number;
    /**
     * Specifies the interval at which to check whether the log files need to be rotated.
     * @type {string}
     * @memberof SyncFailedOpsLogPublisherResponseAllOf
     */
    'timeInterval'?: string;
    /**
     * Specifies which Sync Pipes can log messages to this Sync Log Publisher.
     * @type {Array<string>}
     * @memberof SyncFailedOpsLogPublisherResponseAllOf
     */
    'includeSyncPipe'?: Array<string>;
    /**
     * Indicates whether the Log Publisher is enabled for use.
     * @type {boolean}
     * @memberof SyncFailedOpsLogPublisherResponseAllOf
     */
    'enabled'?: boolean;
    /**
     * Specifies the behavior that the server should exhibit if an error occurs during logging processing.
     * @type {EnumlogPublisherLoggingErrorBehaviorProp}
     * @memberof SyncFailedOpsLogPublisherResponseAllOf
     */
    'loggingErrorBehavior'?: EnumlogPublisherLoggingErrorBehaviorProp;
}

