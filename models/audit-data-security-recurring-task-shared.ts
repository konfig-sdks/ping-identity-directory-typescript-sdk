/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

The version of the OpenAPI document: 0.1


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { EnumauditDataSecurityRecurringTaskSchemaUrn } from './enumaudit-data-security-recurring-task-schema-urn';

/**
 * 
 * @export
 * @interface AuditDataSecurityRecurringTaskShared
 */
export interface AuditDataSecurityRecurringTaskShared {
    /**
     * A description for this Recurring Task
     * @type {string}
     * @memberof AuditDataSecurityRecurringTaskShared
     */
    'description'?: string;
    /**
     * 
     * @type {Array<EnumauditDataSecurityRecurringTaskSchemaUrn>}
     * @memberof AuditDataSecurityRecurringTaskShared
     */
    'schemas': Array<EnumauditDataSecurityRecurringTaskSchemaUrn>;
    /**
     * The base directory below which generated reports will be written. Each invocation of the audit-data-security task will create a new subdirectory below this base directory whose name is a timestamp indicating when the report was generated.
     * @type {string}
     * @memberof AuditDataSecurityRecurringTaskShared
     */
    'baseOutputDirectory'?: string;
    /**
     * The set of data security auditors that should be invoked. If no auditors are specified, then all auditors defined in the configuration will be used.
     * @type {Array<string>}
     * @memberof AuditDataSecurityRecurringTaskShared
     */
    'dataSecurityAuditor'?: Array<string>;
    /**
     * The set of backends that should be examined. If no backends are specified, then all backends that support this functionality will be included.
     * @type {Array<string>}
     * @memberof AuditDataSecurityRecurringTaskShared
     */
    'backend'?: Array<string>;
    /**
     * A filter that will be used to identify entries that may be included in the generated report. If multiple filters are specified, then any entry that matches at least one of the filters will be included. If no filters are specified, then all entries will be included.
     * @type {Array<string>}
     * @memberof AuditDataSecurityRecurringTaskShared
     */
    'includeFilter'?: Array<string>;
    /**
     * The minimum number of previous reports that should be preserved after a new report is generated.
     * @type {number}
     * @memberof AuditDataSecurityRecurringTaskShared
     */
    'retainPreviousReportCount'?: number;
    /**
     * The minimum age of previous reports that should be preserved after a new report completes successfully.
     * @type {string}
     * @memberof AuditDataSecurityRecurringTaskShared
     */
    'retainPreviousReportAge'?: string;
    /**
     * Indicates whether an instance of this Recurring Task should be canceled if the task immediately before it in the recurring task chain fails to complete successfully (including if it is canceled by an administrator before it starts or while it is running).
     * @type {boolean}
     * @memberof AuditDataSecurityRecurringTaskShared
     */
    'cancelOnTaskDependencyFailure'?: boolean;
    /**
     * The email addresses to which a message should be sent whenever an instance of this Recurring Task starts running. If this option is used, then at least one smtp-server must be configured in the global configuration.
     * @type {Array<string>}
     * @memberof AuditDataSecurityRecurringTaskShared
     */
    'emailOnStart'?: Array<string>;
    /**
     * The email addresses to which a message should be sent whenever an instance of this Recurring Task completes successfully. If this option is used, then at least one smtp-server must be configured in the global configuration.
     * @type {Array<string>}
     * @memberof AuditDataSecurityRecurringTaskShared
     */
    'emailOnSuccess'?: Array<string>;
    /**
     * The email addresses to which a message should be sent if an instance of this Recurring Task fails to complete successfully. If this option is used, then at least one smtp-server must be configured in the global configuration.
     * @type {Array<string>}
     * @memberof AuditDataSecurityRecurringTaskShared
     */
    'emailOnFailure'?: Array<string>;
    /**
     * Indicates whether the server should generate an administrative alert whenever an instance of this Recurring Task starts running.
     * @type {boolean}
     * @memberof AuditDataSecurityRecurringTaskShared
     */
    'alertOnStart'?: boolean;
    /**
     * Indicates whether the server should generate an administrative alert whenever an instance of this Recurring Task completes successfully.
     * @type {boolean}
     * @memberof AuditDataSecurityRecurringTaskShared
     */
    'alertOnSuccess'?: boolean;
    /**
     * Indicates whether the server should generate an administrative alert whenever an instance of this Recurring Task fails to complete successfully.
     * @type {boolean}
     * @memberof AuditDataSecurityRecurringTaskShared
     */
    'alertOnFailure'?: boolean;
}

