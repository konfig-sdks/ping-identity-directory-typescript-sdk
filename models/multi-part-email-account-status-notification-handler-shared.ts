/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

The version of the OpenAPI document: 0.1


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { EnummultiPartEmailAccountStatusNotificationHandlerSchemaUrn } from './enummulti-part-email-account-status-notification-handler-schema-urn';

/**
 * 
 * @export
 * @interface MultiPartEmailAccountStatusNotificationHandlerShared
 */
export interface MultiPartEmailAccountStatusNotificationHandlerShared {
    /**
     * A description for this Account Status Notification Handler
     * @type {string}
     * @memberof MultiPartEmailAccountStatusNotificationHandlerShared
     */
    'description'?: string;
    /**
     * 
     * @type {Array<EnummultiPartEmailAccountStatusNotificationHandlerSchemaUrn>}
     * @memberof MultiPartEmailAccountStatusNotificationHandlerShared
     */
    'schemas': Array<EnummultiPartEmailAccountStatusNotificationHandlerSchemaUrn>;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that an account becomes temporarily locked as a result of too many authentication failures.
     * @type {string}
     * @memberof MultiPartEmailAccountStatusNotificationHandlerShared
     */
    'accountTemporarilyFailureLockedMessageTemplate'?: string;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that an account becomes permanently locked as a result of too many authentication failures.
     * @type {string}
     * @memberof MultiPartEmailAccountStatusNotificationHandlerShared
     */
    'accountPermanentlyFailureLockedMessageTemplate'?: string;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that authentication attempt fails because it has been too long since the user last successfully authenticated.
     * @type {string}
     * @memberof MultiPartEmailAccountStatusNotificationHandlerShared
     */
    'accountIdleLockedMessageTemplate'?: string;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that authentication attempt fails because the user failed to choose a new password in a timely manner after an administrative reset.
     * @type {string}
     * @memberof MultiPartEmailAccountStatusNotificationHandlerShared
     */
    'accountResetLockedMessageTemplate'?: string;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that a user\'s account has been unlocked (e.g., by an administrative password reset).
     * @type {string}
     * @memberof MultiPartEmailAccountStatusNotificationHandlerShared
     */
    'accountUnlockedMessageTemplate'?: string;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that a user\'s account is disabled by an administrator.
     * @type {string}
     * @memberof MultiPartEmailAccountStatusNotificationHandlerShared
     */
    'accountDisabledMessageTemplate'?: string;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that a user\'s account is enabled by an administrator.
     * @type {string}
     * @memberof MultiPartEmailAccountStatusNotificationHandlerShared
     */
    'accountEnabledMessageTemplate'?: string;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that an authentication attempt fails because the account has an activation time that is in the future.
     * @type {string}
     * @memberof MultiPartEmailAccountStatusNotificationHandlerShared
     */
    'accountNotYetActiveMessageTemplate'?: string;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that an authentication attempt fails because the account has an expiration time that is in the past.
     * @type {string}
     * @memberof MultiPartEmailAccountStatusNotificationHandlerShared
     */
    'accountExpiredMessageTemplate'?: string;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that an authentication attempt fails because the account has an expired password.
     * @type {string}
     * @memberof MultiPartEmailAccountStatusNotificationHandlerShared
     */
    'passwordExpiredMessageTemplate'?: string;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that an authentication attempt succeeds, but the user\'s password is about to expire. This notification will only be generated the first time the user authenticates within the window of time that the server should warn about an upcoming password expiration.
     * @type {string}
     * @memberof MultiPartEmailAccountStatusNotificationHandlerShared
     */
    'passwordExpiringMessageTemplate'?: string;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that a user\'s password has been reset by an administrator.
     * @type {string}
     * @memberof MultiPartEmailAccountStatusNotificationHandlerShared
     */
    'passwordResetMessageTemplate'?: string;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that a user changes their own password.
     * @type {string}
     * @memberof MultiPartEmailAccountStatusNotificationHandlerShared
     */
    'passwordChangedMessageTemplate'?: string;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that an account has successfully authenticated in a bind operation that matches the criteria provided in the account-authentication-notification-request-criteria property.
     * @type {string}
     * @memberof MultiPartEmailAccountStatusNotificationHandlerShared
     */
    'accountAuthenticatedMessageTemplate'?: string;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that a new account is created in an add request that matches the criteria provided in the account-creation-notification-request-criteria property.
     * @type {string}
     * @memberof MultiPartEmailAccountStatusNotificationHandlerShared
     */
    'accountCreatedMessageTemplate'?: string;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that an existing accout has been removed in a delete request that matches the criteria provided in the account-deletion-notification-request-criteria property.
     * @type {string}
     * @memberof MultiPartEmailAccountStatusNotificationHandlerShared
     */
    'accountDeletedMessageTemplate'?: string;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that an existing account is updated with a modify or modify DN operation that matches the criteria provided in the account-update-notification-request-criteria property.
     * @type {string}
     * @memberof MultiPartEmailAccountStatusNotificationHandlerShared
     */
    'accountUpdatedMessageTemplate'?: string;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that a user authenticated with a password that failed to satisfy the criteria for one or more of the configured password validators.
     * @type {string}
     * @memberof MultiPartEmailAccountStatusNotificationHandlerShared
     */
    'bindPasswordFailedValidationMessageTemplate'?: string;
    /**
     * The path to a file containing the template to use to generate the email message to send in the event that a user successfully authenticates to the server but will be required to choose a new password before they will be allowed to perform any other operations.
     * @type {string}
     * @memberof MultiPartEmailAccountStatusNotificationHandlerShared
     */
    'mustChangePasswordMessageTemplate'?: string;
    /**
     * Indicates whether the Account Status Notification Handler is enabled. Only enabled handlers are invoked whenever a related event occurs in the server.
     * @type {boolean}
     * @memberof MultiPartEmailAccountStatusNotificationHandlerShared
     */
    'enabled': boolean;
    /**
     * Indicates whether the server should attempt to invoke this Account Status Notification Handler in a background thread so that any potentially-expensive processing (e.g., performing network communication to deliver a message) will not delay processing for the operation that triggered the notification.
     * @type {boolean}
     * @memberof MultiPartEmailAccountStatusNotificationHandlerShared
     */
    'asynchronous'?: boolean;
    /**
     * A result criteria object that identifies which successful bind operations should result in account authentication notifications for this handler.
     * @type {string}
     * @memberof MultiPartEmailAccountStatusNotificationHandlerShared
     */
    'accountAuthenticationNotificationResultCriteria'?: string;
    /**
     * A request criteria object that identifies which add requests should result in account creation notifications for this handler.
     * @type {string}
     * @memberof MultiPartEmailAccountStatusNotificationHandlerShared
     */
    'accountCreationNotificationRequestCriteria'?: string;
    /**
     * A request criteria object that identifies which delete requests should result in account deletion notifications for this handler.
     * @type {string}
     * @memberof MultiPartEmailAccountStatusNotificationHandlerShared
     */
    'accountDeletionNotificationRequestCriteria'?: string;
    /**
     * A request criteria object that identifies which modify and modify DN requests should result in account update notifications for this handler.
     * @type {string}
     * @memberof MultiPartEmailAccountStatusNotificationHandlerShared
     */
    'accountUpdateNotificationRequestCriteria'?: string;
}

