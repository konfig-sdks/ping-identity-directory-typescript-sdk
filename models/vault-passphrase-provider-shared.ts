/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

The version of the OpenAPI document: 0.1


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { EnumvaultPassphraseProviderSchemaUrn } from './enumvault-passphrase-provider-schema-urn';

/**
 * 
 * @export
 * @interface VaultPassphraseProviderShared
 */
export interface VaultPassphraseProviderShared {
    /**
     * A description for this Passphrase Provider
     * @type {string}
     * @memberof VaultPassphraseProviderShared
     */
    'description'?: string;
    /**
     * 
     * @type {Array<EnumvaultPassphraseProviderSchemaUrn>}
     * @memberof VaultPassphraseProviderShared
     */
    'schemas': Array<EnumvaultPassphraseProviderSchemaUrn>;
    /**
     * An external server definition with information needed to connect and authenticate to the Vault instance containing the passphrase.
     * @type {string}
     * @memberof VaultPassphraseProviderShared
     */
    'vaultExternalServer': string;
    /**
     * The path to the desired secret in the Vault service. This will be appended to the value of the base-url property for the associated Vault external server.
     * @type {string}
     * @memberof VaultPassphraseProviderShared
     */
    'vaultSecretPath': string;
    /**
     * The name of the field in the Vault secret record that contains the passphrase to use to generate the encryption key.
     * @type {string}
     * @memberof VaultPassphraseProviderShared
     */
    'vaultSecretFieldName': string;
    /**
     * The maximum length of time that the passphrase provider may cache the passphrase that has been read from Vault. A value of zero seconds indicates that the provider should always attempt to read the passphrase from Vault.
     * @type {string}
     * @memberof VaultPassphraseProviderShared
     */
    'maxCacheDuration'?: string;
    /**
     * Indicates whether this Passphrase Provider is enabled for use in the server.
     * @type {boolean}
     * @memberof VaultPassphraseProviderShared
     */
    'enabled': boolean;
}

