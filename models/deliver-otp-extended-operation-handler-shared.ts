/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

The version of the OpenAPI document: 0.1


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { EnumdeliverOtpExtendedOperationHandlerSchemaUrn } from './enumdeliver-otp-extended-operation-handler-schema-urn';

/**
 * 
 * @export
 * @interface DeliverOtpExtendedOperationHandlerShared
 */
export interface DeliverOtpExtendedOperationHandlerShared {
    /**
     * A description for this Extended Operation Handler
     * @type {string}
     * @memberof DeliverOtpExtendedOperationHandlerShared
     */
    'description'?: string;
    /**
     * 
     * @type {Array<EnumdeliverOtpExtendedOperationHandlerSchemaUrn>}
     * @memberof DeliverOtpExtendedOperationHandlerShared
     */
    'schemas': Array<EnumdeliverOtpExtendedOperationHandlerSchemaUrn>;
    /**
     * The identity mapper that should be used to identify the user(s) targeted by the authentication identity contained in the extended request. This will only be used for \"u:\"-style authentication identities.
     * @type {string}
     * @memberof DeliverOtpExtendedOperationHandlerShared
     */
    'identityMapper': string;
    /**
     * The password generator that will be used to create the one-time password values to be delivered to the end user.
     * @type {string}
     * @memberof DeliverOtpExtendedOperationHandlerShared
     */
    'passwordGenerator': string;
    /**
     * The set of delivery mechanisms that may be used to deliver one-time passwords to users in requests that do not specify one or more preferred delivery mechanisms.
     * @type {Array<string>}
     * @memberof DeliverOtpExtendedOperationHandlerShared
     */
    'defaultOTPDeliveryMechanism': Array<string>;
    /**
     * Indicates whether the Extended Operation Handler is enabled (that is, whether the types of extended operations are allowed in the server).
     * @type {boolean}
     * @memberof DeliverOtpExtendedOperationHandlerShared
     */
    'enabled': boolean;
}

