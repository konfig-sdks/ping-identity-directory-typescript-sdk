/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

The version of the OpenAPI document: 0.1


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { EnumconjurCipherStreamProviderSchemaUrn } from './enumconjur-cipher-stream-provider-schema-urn';

/**
 * 
 * @export
 * @interface ConjurCipherStreamProviderShared
 */
export interface ConjurCipherStreamProviderShared {
    /**
     * A description for this Cipher Stream Provider
     * @type {string}
     * @memberof ConjurCipherStreamProviderShared
     */
    'description'?: string;
    /**
     * 
     * @type {Array<EnumconjurCipherStreamProviderSchemaUrn>}
     * @memberof ConjurCipherStreamProviderShared
     */
    'schemas': Array<EnumconjurCipherStreamProviderSchemaUrn>;
    /**
     * An external server definition with information needed to connect and authenticate to the Conjur server.
     * @type {string}
     * @memberof ConjurCipherStreamProviderShared
     */
    'conjurExternalServer': string;
    /**
     * The portion of the path that follows the account name in the URI needed to obtain the secret passphrase to use to generate the encryption key. Any special characters in the path must be URL-encoded.
     * @type {string}
     * @memberof ConjurCipherStreamProviderShared
     */
    'conjurSecretRelativePath': string;
    /**
     * The path to a file that will hold metadata about the encryption performed by this Conjur Cipher Stream Provider.
     * @type {string}
     * @memberof ConjurCipherStreamProviderShared
     */
    'encryptionMetadataFile'?: string;
    /**
     * The PBKDF2 iteration count that will be used when deriving the encryption key used to protect the encryption settings database.
     * @type {number}
     * @memberof ConjurCipherStreamProviderShared
     */
    'iterationCount'?: number;
    /**
     * Indicates whether this Cipher Stream Provider is enabled for use in the Directory Server.
     * @type {boolean}
     * @memberof ConjurCipherStreamProviderShared
     */
    'enabled': boolean;
}

