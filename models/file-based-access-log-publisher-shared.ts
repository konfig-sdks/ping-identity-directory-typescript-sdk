/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

The version of the OpenAPI document: 0.1


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { EnumfileBasedAccessLogPublisherSchemaUrn } from './enumfile-based-access-log-publisher-schema-urn';
import { EnumlogPublisherCompressionMechanismProp } from './enumlog-publisher-compression-mechanism-prop';
import { EnumlogPublisherLoggingErrorBehaviorProp } from './enumlog-publisher-logging-error-behavior-prop';
import { EnumlogPublisherTimestampPrecisionProp } from './enumlog-publisher-timestamp-precision-prop';

/**
 * 
 * @export
 * @interface FileBasedAccessLogPublisherShared
 */
export interface FileBasedAccessLogPublisherShared {
    /**
     * A description for this Log Publisher
     * @type {string}
     * @memberof FileBasedAccessLogPublisherShared
     */
    'description'?: string;
    /**
     * 
     * @type {Array<EnumfileBasedAccessLogPublisherSchemaUrn>}
     * @memberof FileBasedAccessLogPublisherShared
     */
    'schemas': Array<EnumfileBasedAccessLogPublisherSchemaUrn>;
    /**
     * The file name to use for the log files generated by the File Based Access Log Publisher. The path to the file can be specified either as relative to the server root or as an absolute path.
     * @type {string}
     * @memberof FileBasedAccessLogPublisherShared
     */
    'logFile': string;
    /**
     * The UNIX permissions of the log files created by this File Based Access Log Publisher.
     * @type {string}
     * @memberof FileBasedAccessLogPublisherShared
     */
    'logFilePermissions'?: string;
    /**
     * The rotation policy to use for the File Based Access Log Publisher .
     * @type {Array<string>}
     * @memberof FileBasedAccessLogPublisherShared
     */
    'rotationPolicy'?: Array<string>;
    /**
     * A listener that should be notified whenever a log file is rotated out of service.
     * @type {Array<string>}
     * @memberof FileBasedAccessLogPublisherShared
     */
    'rotationListener'?: Array<string>;
    /**
     * The retention policy to use for the File Based Access Log Publisher .
     * @type {Array<string>}
     * @memberof FileBasedAccessLogPublisherShared
     */
    'retentionPolicy'?: Array<string>;
    /**
     * Specifies the type of compression (if any) to use for log files that are written.
     * @type {EnumlogPublisherCompressionMechanismProp}
     * @memberof FileBasedAccessLogPublisherShared
     */
    'compressionMechanism'?: EnumlogPublisherCompressionMechanismProp;
    /**
     * Indicates whether the log should be cryptographically signed so that the log content cannot be altered in an undetectable manner.
     * @type {boolean}
     * @memberof FileBasedAccessLogPublisherShared
     */
    'signLog'?: boolean;
    /**
     * Indicates whether log files should be encrypted so that their content is not available to unauthorized users.
     * @type {boolean}
     * @memberof FileBasedAccessLogPublisherShared
     */
    'encryptLog'?: boolean;
    /**
     * Specifies the ID of the encryption settings definition that should be used to encrypt the data. If this is not provided, the server\'s preferred encryption settings definition will be used. The \"encryption-settings list\" command can be used to obtain a list of the encryption settings definitions available in the server.
     * @type {string}
     * @memberof FileBasedAccessLogPublisherShared
     */
    'encryptionSettingsDefinitionID'?: string;
    /**
     * Specifies whether to append to existing log files.
     * @type {boolean}
     * @memberof FileBasedAccessLogPublisherShared
     */
    'append'?: boolean;
    /**
     * Specifies the log file buffer size.
     * @type {string}
     * @memberof FileBasedAccessLogPublisherShared
     */
    'bufferSize'?: string;
    /**
     * Specifies the interval at which to check whether the log files need to be rotated.
     * @type {string}
     * @memberof FileBasedAccessLogPublisherShared
     */
    'timeInterval'?: string;
    /**
     * Specifies the smallest time unit to be included in timestamps.
     * @type {EnumlogPublisherTimestampPrecisionProp}
     * @memberof FileBasedAccessLogPublisherShared
     */
    'timestampPrecision'?: EnumlogPublisherTimestampPrecisionProp;
    /**
     * Indicates whether to log information about connections established to the server.
     * @type {boolean}
     * @memberof FileBasedAccessLogPublisherShared
     */
    'logConnects'?: boolean;
    /**
     * Indicates whether to log information about connections that have been closed by the client or terminated by the server.
     * @type {boolean}
     * @memberof FileBasedAccessLogPublisherShared
     */
    'logDisconnects'?: boolean;
    /**
     * Indicates whether to log information about requests received from clients.
     * @type {boolean}
     * @memberof FileBasedAccessLogPublisherShared
     */
    'logRequests'?: boolean;
    /**
     * Indicates whether to log information about the result of replication assurance processing.
     * @type {boolean}
     * @memberof FileBasedAccessLogPublisherShared
     */
    'logAssuranceCompleted'?: boolean;
    /**
     * Indicates whether log messages should include the product name for the Directory Server.
     * @type {boolean}
     * @memberof FileBasedAccessLogPublisherShared
     */
    'includeProductName'?: boolean;
    /**
     * Indicates whether log messages should include the instance name for the Directory Server.
     * @type {boolean}
     * @memberof FileBasedAccessLogPublisherShared
     */
    'includeInstanceName'?: boolean;
    /**
     * Indicates whether log messages should include the startup ID for the Directory Server, which is a value assigned to the server instance at startup and may be used to identify when the server has been restarted.
     * @type {boolean}
     * @memberof FileBasedAccessLogPublisherShared
     */
    'includeStartupID'?: boolean;
    /**
     * Indicates whether log messages should include the thread ID for the Directory Server in each log message. This ID can be used to correlate log messages from the same thread within a single log as well as generated by the same thread across different types of log files. More information about the thread with a specific ID can be obtained using the cn=JVM Stack Trace,cn=monitor entry.
     * @type {boolean}
     * @memberof FileBasedAccessLogPublisherShared
     */
    'includeThreadID'?: boolean;
    /**
     * Indicates whether log messages for operation requests should include the DN of the authenticated user for the client connection on which the operation was requested.
     * @type {boolean}
     * @memberof FileBasedAccessLogPublisherShared
     */
    'includeRequesterDN'?: boolean;
    /**
     * Indicates whether log messages for operation requests should include the IP address of the client that requested the operation.
     * @type {boolean}
     * @memberof FileBasedAccessLogPublisherShared
     */
    'includeRequesterIPAddress'?: boolean;
    /**
     * Indicates whether log messages for operation results should include information about both the request and the result.
     * @type {boolean}
     * @memberof FileBasedAccessLogPublisherShared
     */
    'includeRequestDetailsInResultMessages'?: boolean;
    /**
     * Indicates whether log messages for search result entries should include information about the associated search request.
     * @type {boolean}
     * @memberof FileBasedAccessLogPublisherShared
     */
    'includeRequestDetailsInSearchEntryMessages'?: boolean;
    /**
     * Indicates whether log messages for search result references should include information about the associated search request.
     * @type {boolean}
     * @memberof FileBasedAccessLogPublisherShared
     */
    'includeRequestDetailsInSearchReferenceMessages'?: boolean;
    /**
     * Indicates whether log messages for intermediate responses should include information about the associated operation request.
     * @type {boolean}
     * @memberof FileBasedAccessLogPublisherShared
     */
    'includeRequestDetailsInIntermediateResponseMessages'?: boolean;
    /**
     * Indicates whether result log messages should include human-readable names for result codes in addition to their numeric values.
     * @type {boolean}
     * @memberof FileBasedAccessLogPublisherShared
     */
    'includeResultCodeNames'?: boolean;
    /**
     * Indicates whether log messages for search requests should include extended information from the request, including the requested size limit, time limit, alias dereferencing behavior, and types only behavior.
     * @type {boolean}
     * @memberof FileBasedAccessLogPublisherShared
     */
    'includeExtendedSearchRequestDetails'?: boolean;
    /**
     * Indicates whether log messages for add requests should include a list of the names of the attributes included in the entry to add.
     * @type {boolean}
     * @memberof FileBasedAccessLogPublisherShared
     */
    'includeAddAttributeNames'?: boolean;
    /**
     * Indicates whether log messages for modify requests should include a list of the names of the attributes to be modified.
     * @type {boolean}
     * @memberof FileBasedAccessLogPublisherShared
     */
    'includeModifyAttributeNames'?: boolean;
    /**
     * Indicates whether log messages for search result entries should include a list of the names of the attributes included in the entry that was returned.
     * @type {boolean}
     * @memberof FileBasedAccessLogPublisherShared
     */
    'includeSearchEntryAttributeNames'?: boolean;
    /**
     * Indicates whether log messages for operation requests should include a list of the OIDs of any controls included in the request.
     * @type {boolean}
     * @memberof FileBasedAccessLogPublisherShared
     */
    'includeRequestControls'?: boolean;
    /**
     * Indicates whether log messages for operation results should include a list of the OIDs of any controls included in the result.
     * @type {boolean}
     * @memberof FileBasedAccessLogPublisherShared
     */
    'includeResponseControls'?: boolean;
    /**
     * Indicates whether to log information about the replication change ID.
     * @type {boolean}
     * @memberof FileBasedAccessLogPublisherShared
     */
    'includeReplicationChangeID'?: boolean;
    /**
     * Indicates whether to use generified version of certain message strings, including diagnostic messages, additional information messages, authentication failure reasons, and disconnect messages. Generified versions of those strings may use placeholders (like %s for a string or %d for an integer) rather than the version of the string with those placeholders replaced with specific values.
     * @type {boolean}
     * @memberof FileBasedAccessLogPublisherShared
     */
    'generifyMessageStringsWhenPossible'?: boolean;
    /**
     * Indicates whether the Writer Based Access Log Publisher will publish records asynchronously.
     * @type {boolean}
     * @memberof FileBasedAccessLogPublisherShared
     */
    'asynchronous'?: boolean;
    /**
     * Specifies whether to flush the writer after every log record.
     * @type {boolean}
     * @memberof FileBasedAccessLogPublisherShared
     */
    'autoFlush'?: boolean;
    /**
     * Specifies the maximum number of characters that may be included in any string in a log message before that string is truncated and replaced with a placeholder indicating the number of characters that were omitted. This can help prevent extremely long log messages from being written.
     * @type {number}
     * @memberof FileBasedAccessLogPublisherShared
     */
    'maxStringLength'?: number;
    /**
     * The maximum number of log records that can be stored in the asynchronous queue.
     * @type {number}
     * @memberof FileBasedAccessLogPublisherShared
     */
    'queueSize'?: number;
    /**
     * The behavior to use for determining which fields to log and whether to transform the values of those fields in any way.
     * @type {string}
     * @memberof FileBasedAccessLogPublisherShared
     */
    'logFieldBehavior'?: string;
    /**
     * Indicates whether to log information about the result of any security negotiation (e.g., SSL handshake) processing that has been performed.
     * @type {boolean}
     * @memberof FileBasedAccessLogPublisherShared
     */
    'logSecurityNegotiation'?: boolean;
    /**
     * Indicates whether to log information about any client certificates presented to the server.
     * @type {boolean}
     * @memberof FileBasedAccessLogPublisherShared
     */
    'logClientCertificates'?: boolean;
    /**
     * Indicates whether to log information about the results of client requests.
     * @type {boolean}
     * @memberof FileBasedAccessLogPublisherShared
     */
    'logResults'?: boolean;
    /**
     * Indicates whether to log information about search result entries sent to the client.
     * @type {boolean}
     * @memberof FileBasedAccessLogPublisherShared
     */
    'logSearchEntries'?: boolean;
    /**
     * Indicates whether to log information about search result references sent to the client.
     * @type {boolean}
     * @memberof FileBasedAccessLogPublisherShared
     */
    'logSearchReferences'?: boolean;
    /**
     * Indicates whether to log information about intermediate responses sent to the client.
     * @type {boolean}
     * @memberof FileBasedAccessLogPublisherShared
     */
    'logIntermediateResponses'?: boolean;
    /**
     * Indicates whether internal operations (for example, operations that are initiated by plugins) should be logged along with the operations that are requested by users.
     * @type {boolean}
     * @memberof FileBasedAccessLogPublisherShared
     */
    'suppressInternalOperations'?: boolean;
    /**
     * Indicates whether access messages that are generated by replication operations should be suppressed.
     * @type {boolean}
     * @memberof FileBasedAccessLogPublisherShared
     */
    'suppressReplicationOperations'?: boolean;
    /**
     * Indicates whether to automatically log result messages for any operation in which the corresponding request was logged. In such cases, the result, entry, and reference criteria will be ignored, although the log-responses, log-search-entries, and log-search-references properties will be honored.
     * @type {boolean}
     * @memberof FileBasedAccessLogPublisherShared
     */
    'correlateRequestsAndResults'?: boolean;
    /**
     * Specifies a set of connection criteria that must match the associated client connection in order for a connect, disconnect, request, or result message to be logged.
     * @type {string}
     * @memberof FileBasedAccessLogPublisherShared
     */
    'connectionCriteria'?: string;
    /**
     * Specifies a set of request criteria that must match the associated operation request in order for a request or result to be logged by this Access Log Publisher.
     * @type {string}
     * @memberof FileBasedAccessLogPublisherShared
     */
    'requestCriteria'?: string;
    /**
     * Specifies a set of result criteria that must match the associated operation result in order for that result to be logged by this Access Log Publisher.
     * @type {string}
     * @memberof FileBasedAccessLogPublisherShared
     */
    'resultCriteria'?: string;
    /**
     * Specifies a set of search entry criteria that must match the associated search result entry in order for that it to be logged by this Access Log Publisher.
     * @type {string}
     * @memberof FileBasedAccessLogPublisherShared
     */
    'searchEntryCriteria'?: string;
    /**
     * Specifies a set of search reference criteria that must match the associated search result reference in order for that it to be logged by this Access Log Publisher.
     * @type {string}
     * @memberof FileBasedAccessLogPublisherShared
     */
    'searchReferenceCriteria'?: string;
    /**
     * Indicates whether the Log Publisher is enabled for use.
     * @type {boolean}
     * @memberof FileBasedAccessLogPublisherShared
     */
    'enabled': boolean;
    /**
     * Specifies the behavior that the server should exhibit if an error occurs during logging processing.
     * @type {EnumlogPublisherLoggingErrorBehaviorProp}
     * @memberof FileBasedAccessLogPublisherShared
     */
    'loggingErrorBehavior'?: EnumlogPublisherLoggingErrorBehaviorProp;
}

