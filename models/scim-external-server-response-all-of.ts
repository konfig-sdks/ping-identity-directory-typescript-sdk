/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

The version of the OpenAPI document: 0.1


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { EnumexternalServerOAuthTokenTypeProp } from './enumexternal-server-oauth-token-type-prop';
import { EnumexternalServerScimAuthenticationMethodProp } from './enumexternal-server-scim-authentication-method-prop';
import { EnumexternalServerScimConnectionSecurityProp } from './enumexternal-server-scim-connection-security-prop';
import { EnumexternalServerScimHostnameVerificationMethodProp } from './enumexternal-server-scim-hostname-verification-method-prop';
import { EnumscimExternalServerSchemaUrn } from './enumscim-external-server-schema-urn';

/**
 * 
 * @export
 * @interface ScimExternalServerResponseAllOf
 */
export interface ScimExternalServerResponseAllOf {
    /**
     * A description for this External Server
     * @type {string}
     * @memberof ScimExternalServerResponseAllOf
     */
    'description'?: string;
    /**
     * 
     * @type {Array<EnumscimExternalServerSchemaUrn>}
     * @memberof ScimExternalServerResponseAllOf
     */
    'schemas'?: Array<EnumscimExternalServerSchemaUrn>;
    /**
     * Name of the External Server
     * @type {string}
     * @memberof ScimExternalServerResponseAllOf
     */
    'id'?: string;
    /**
     * The complete URL which will be used to access the SCIM service provider.
     * @type {string}
     * @memberof ScimExternalServerResponseAllOf
     */
    'scimServiceURL'?: string;
    /**
     * The name of the login account to use when connecting to the SCIM service provider. This is used in conjunction with the chosen authentication-method.
     * @type {string}
     * @memberof ScimExternalServerResponseAllOf
     */
    'userName'?: string;
    /**
     * The login password for the specified user name. This is used in conjunction with the chosen authentication-method.
     * @type {string}
     * @memberof ScimExternalServerResponseAllOf
     */
    'password'?: string;
    /**
     * The passphrase provider to use to obtain the login password for the specified user.
     * @type {string}
     * @memberof ScimExternalServerResponseAllOf
     */
    'passphraseProvider'?: string;
    /**
     * Specifies the location for the SCIM External Server.
     * @type {string}
     * @memberof ScimExternalServerResponseAllOf
     */
    'location'?: string;
    /**
     * The mechanism to use to secure communication with the SCIM service provider.
     * @type {EnumexternalServerScimConnectionSecurityProp}
     * @memberof ScimExternalServerResponseAllOf
     */
    'connectionSecurity'?: EnumexternalServerScimConnectionSecurityProp;
    /**
     * The mechanism to use to authenticate to the target server.
     * @type {EnumexternalServerScimAuthenticationMethodProp}
     * @memberof ScimExternalServerResponseAllOf
     */
    'authenticationMethod'?: EnumexternalServerScimAuthenticationMethodProp;
    /**
     * The mechanism for checking if the service provider\'s hostname matches the name(s) stored inside the server\'s X.509 certificate. This is only applicable if SSL is being used for connection security.
     * @type {EnumexternalServerScimHostnameVerificationMethodProp}
     * @memberof ScimExternalServerResponseAllOf
     */
    'hostnameVerificationMethod'?: EnumexternalServerScimHostnameVerificationMethodProp;
    /**
     * A reference to an HTTP proxy server that should be used for requests sent to the SCIM service.
     * @type {string}
     * @memberof ScimExternalServerResponseAllOf
     */
    'httpProxyExternalServer'?: string;
    /**
     * The key manager provider to use if SSL is to be used for connection-level security. When specifying a value for this property (except when using the Null key manager provider) you must ensure that the external server trusts this server\'s public certificate by adding this server\'s public certificate to the external server\'s trust store.
     * @type {string}
     * @memberof ScimExternalServerResponseAllOf
     */
    'keyManagerProvider'?: string;
    /**
     * The trust manager provider to use if SSL is to be used for connection-level security.
     * @type {string}
     * @memberof ScimExternalServerResponseAllOf
     */
    'trustManagerProvider'?: string;
    /**
     * Specifies the amount of time to wait for a response from the service provider when establishing a connection. If the timeout is exceeded, the Directory Server will attempt to fail over to a different server. A value of zero indicates no timeout.
     * @type {string}
     * @memberof ScimExternalServerResponseAllOf
     */
    'connectTimeout'?: string;
    /**
     * Specifies the maximum length of time that an operation should be allowed to block while waiting for a response from the SCIM service provider. A value of zero indicates that there should be no client-side timeout.
     * @type {string}
     * @memberof ScimExternalServerResponseAllOf
     */
    'responseTimeout'?: string;
    /**
     * The type of OAuth token to use in conjunction with the OAuth authentication-method.
     * @type {EnumexternalServerOAuthTokenTypeProp}
     * @memberof ScimExternalServerResponseAllOf
     */
    'OAuthTokenType'?: EnumexternalServerOAuthTokenTypeProp;
    /**
     * The token to use in conjunction with the OAuth authentication-method and the chosen oauth-token-type.
     * @type {string}
     * @memberof ScimExternalServerResponseAllOf
     */
    'OAuthToken'?: string;
}

