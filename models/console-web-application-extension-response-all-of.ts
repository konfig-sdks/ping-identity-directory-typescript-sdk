/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

The version of the OpenAPI document: 0.1


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { EnumconsoleWebApplicationExtensionSchemaUrn } from './enumconsole-web-application-extension-schema-urn';
import { EnumwebApplicationExtensionComplexityProp } from './enumweb-application-extension-complexity-prop';

/**
 * 
 * @export
 * @interface ConsoleWebApplicationExtensionResponseAllOf
 */
export interface ConsoleWebApplicationExtensionResponseAllOf {
    /**
     * A description for this Web Application Extension
     * @type {string}
     * @memberof ConsoleWebApplicationExtensionResponseAllOf
     */
    'description'?: string;
    /**
     * 
     * @type {Array<EnumconsoleWebApplicationExtensionSchemaUrn>}
     * @memberof ConsoleWebApplicationExtensionResponseAllOf
     */
    'schemas'?: Array<EnumconsoleWebApplicationExtensionSchemaUrn>;
    /**
     * Name of the Web Application Extension
     * @type {string}
     * @memberof ConsoleWebApplicationExtensionResponseAllOf
     */
    'id'?: string;
    /**
     * Indicates that SSO login into the Administrative Console is enabled.
     * @type {boolean}
     * @memberof ConsoleWebApplicationExtensionResponseAllOf
     */
    'ssoEnabled'?: boolean;
    /**
     * The client ID to use when authenticating to the OpenID Connect provider.
     * @type {string}
     * @memberof ConsoleWebApplicationExtensionResponseAllOf
     */
    'oidcClientID'?: string;
    /**
     * The client secret to use when authenticating to the OpenID Connect provider.
     * @type {string}
     * @memberof ConsoleWebApplicationExtensionResponseAllOf
     */
    'oidcClientSecret'?: string;
    /**
     * A passphrase provider that may be used to obtain the client secret to use when authenticating to the OpenID Connect provider.
     * @type {string}
     * @memberof ConsoleWebApplicationExtensionResponseAllOf
     */
    'oidcClientSecretPassphraseProvider'?: string;
    /**
     * The issuer URL of the OpenID Connect provider.
     * @type {string}
     * @memberof ConsoleWebApplicationExtensionResponseAllOf
     */
    'oidcIssuerURL'?: string;
    /**
     * Specifies the path to the truststore file used by this application to evaluate OIDC provider certificates. If this field is left blank, the default JVM trust store will be used.
     * @type {string}
     * @memberof ConsoleWebApplicationExtensionResponseAllOf
     */
    'oidcTrustStoreFile'?: string;
    /**
     * Specifies the format for the data in the OIDC trust store file.
     * @type {string}
     * @memberof ConsoleWebApplicationExtensionResponseAllOf
     */
    'oidcTrustStoreType'?: string;
    /**
     * The passphrase provider that may be used to obtain the PIN for the trust store used with OIDC providers. This is only required if a trust store file is required, and if that trust store requires a PIN to access its contents.
     * @type {string}
     * @memberof ConsoleWebApplicationExtensionResponseAllOf
     */
    'oidcTrustStorePinPassphraseProvider'?: string;
    /**
     * Controls whether or not hostname verification is performed, which checks if the hostname of the OIDC provider matches the name(s) stored inside the certificate it provides. This property should only be set to false for testing purposes.
     * @type {boolean}
     * @memberof ConsoleWebApplicationExtensionResponseAllOf
     */
    'oidcStrictHostnameVerification'?: boolean;
    /**
     * Controls whether or not this application will always trust any certificate that is presented to it, regardless of its contents. This property should only be set to true for testing purposes.
     * @type {boolean}
     * @memberof ConsoleWebApplicationExtensionResponseAllOf
     */
    'oidcTrustAll'?: boolean;
    /**
     * The LDAP URL used to connect to the managed server.
     * @type {string}
     * @memberof ConsoleWebApplicationExtensionResponseAllOf
     */
    'ldapServer'?: string;
    /**
     * Specifies the path to the truststore file, which is used by this application to establish trust of managed servers.
     * @type {string}
     * @memberof ConsoleWebApplicationExtensionResponseAllOf
     */
    'trustStoreFile'?: string;
    /**
     * Specifies the format for the data in the trust store file.
     * @type {string}
     * @memberof ConsoleWebApplicationExtensionResponseAllOf
     */
    'trustStoreType'?: string;
    /**
     * The passphrase provider that may be used to obtain the PIN for the trust store used with managed LDAP servers. This is only required if a trust store file is required, and if that trust store requires a PIN to access its contents.
     * @type {string}
     * @memberof ConsoleWebApplicationExtensionResponseAllOf
     */
    'trustStorePinPassphraseProvider'?: string;
    /**
     * The path to the log file for the web application.
     * @type {string}
     * @memberof ConsoleWebApplicationExtensionResponseAllOf
     */
    'logFile'?: string;
    /**
     * Specifies the maximum complexity level for managed configuration elements.
     * @type {EnumwebApplicationExtensionComplexityProp}
     * @memberof ConsoleWebApplicationExtensionResponseAllOf
     */
    'complexity'?: EnumwebApplicationExtensionComplexityProp;
    /**
     * Specifies the base context path that should be used by HTTP clients to reference content. The value must start with a forward slash and at least one additional character and must represent a valid HTTP context path.
     * @type {string}
     * @memberof ConsoleWebApplicationExtensionResponseAllOf
     */
    'baseContextPath'?: string;
    /**
     * Specifies the path to a standard web application archive (WAR) file.
     * @type {string}
     * @memberof ConsoleWebApplicationExtensionResponseAllOf
     */
    'warFile'?: string;
    /**
     * Specifies the path to the directory on the local filesystem containing the files to be served by this Web Application Extension. The path must exist, and it must be a directory.
     * @type {string}
     * @memberof ConsoleWebApplicationExtensionResponseAllOf
     */
    'documentRootDirectory'?: string;
    /**
     * Specifies the path to the deployment descriptor file when used with document-root-directory.
     * @type {string}
     * @memberof ConsoleWebApplicationExtensionResponseAllOf
     */
    'deploymentDescriptorFile'?: string;
    /**
     * Specifies the path to the directory that may be used to store temporary files such as extracted WAR files and compiled JSP files.
     * @type {string}
     * @memberof ConsoleWebApplicationExtensionResponseAllOf
     */
    'temporaryDirectory'?: string;
    /**
     * Specifies an initialization parameter to pass into the web application during startup.
     * @type {Array<string>}
     * @memberof ConsoleWebApplicationExtensionResponseAllOf
     */
    'initParameter'?: Array<string>;
}

