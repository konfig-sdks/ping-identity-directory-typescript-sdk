/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

The version of the OpenAPI document: 0.1


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { EnumreplicationServerCompressionCriteriaProp } from './enumreplication-server-compression-criteria-prop';
import { EnumreplicationServerMissingChangesPolicyProp } from './enumreplication-server-missing-changes-policy-prop';
import { EnumreplicationServerSchemaUrn } from './enumreplication-server-schema-urn';

/**
 * 
 * @export
 * @interface ReplicationServerResponseAllOf
 */
export interface ReplicationServerResponseAllOf {
    /**
     * 
     * @type {Array<EnumreplicationServerSchemaUrn>}
     * @memberof ReplicationServerResponseAllOf
     */
    'schemas'?: Array<EnumreplicationServerSchemaUrn>;
    /**
     * Specifies a unique identifier for the Replication Server.
     * @type {number}
     * @memberof ReplicationServerResponseAllOf
     */
    'replicationServerID'?: number;
    /**
     * The path where the Replication Server stores all persistent information.
     * @type {string}
     * @memberof ReplicationServerResponseAllOf
     */
    'replicationDBDirectory'?: string;
    /**
     * Specifies the database and environment properties for the Berkeley DB Java Edition database for the replication changelog.
     * @type {Array<string>}
     * @memberof ReplicationServerResponseAllOf
     */
    'jeProperty'?: Array<string>;
    /**
     * Changes are guaranteed to be maintained in the changelog database for at least this duration. Setting target-database-size can allow additional changes to be maintained up to the configured size on disk.
     * @type {string}
     * @memberof ReplicationServerResponseAllOf
     */
    'replicationPurgeDelay'?: string;
    /**
     * The replication changelog database is allowed to grow up to this size even if changes are older than the configured replication-purge-delay.
     * @type {string}
     * @memberof ReplicationServerResponseAllOf
     */
    'targetDatabaseSize'?: string;
    /**
     * The port on which this Replication Server waits for connections from other Replication Servers or Directory Server instances.
     * @type {number}
     * @memberof ReplicationServerResponseAllOf
     */
    'replicationPort'?: number;
    /**
     * Indicates whether the Replication Server should listen on all addresses for this host. If set to FALSE, then the Replication Server will listen only to the address resolved from the hostname provided.
     * @type {boolean}
     * @memberof ReplicationServerResponseAllOf
     */
    'listenOnAllAddresses'?: boolean;
    /**
     * Specifies when the replication traffic should be compressed.
     * @type {EnumreplicationServerCompressionCriteriaProp}
     * @memberof ReplicationServerResponseAllOf
     */
    'compressionCriteria'?: EnumreplicationServerCompressionCriteriaProp;
    /**
     * Specifies the heartbeat interval that the Directory Server will use when communicating with Replication Servers.
     * @type {string}
     * @memberof ReplicationServerResponseAllOf
     */
    'heartbeatInterval'?: string;
    /**
     * Specifies the duration that topology monitor data will be cached before it is requested again from a remote server.
     * @type {string}
     * @memberof ReplicationServerResponseAllOf
     */
    'remoteMonitorUpdateInterval'?: string;
    /**
     * Specifies the base DN of domains that are only replicated between server instances that belong to the same replication set.
     * @type {Array<string>}
     * @memberof ReplicationServerResponseAllOf
     */
    'restrictedDomain'?: Array<string>;
    /**
     * Specifies the gateway priority of the Replication Server in the current location.
     * @type {number}
     * @memberof ReplicationServerResponseAllOf
     */
    'gatewayPriority'?: number;
    /**
     * Specifies the missing changes alert threshold as a percentage of the total pending changes. For instance, a value of 80 indicates that the replica is 80% of the way to losing changes.
     * @type {number}
     * @memberof ReplicationServerResponseAllOf
     */
    'missingChangesAlertThresholdPercent'?: number;
    /**
     * Determines how the server responds when replication detects that some changes might have been missed. Each missing changes policy is a set of missing changes actions to take for a set of missing changes types. The value configured here acts as a default for all replication domains on this replication server.
     * @type {EnumreplicationServerMissingChangesPolicyProp}
     * @memberof ReplicationServerResponseAllOf
     */
    'missingChangesPolicy'?: EnumreplicationServerMissingChangesPolicyProp;
    /**
     * Indicates monitor messages should include information about remote servers.
     * @type {boolean}
     * @memberof ReplicationServerResponseAllOf
     */
    'includeAllRemoteServersStateInMonitorMessage'?: boolean;
}

