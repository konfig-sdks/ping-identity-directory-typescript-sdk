/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

The version of the OpenAPI document: 0.1


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { EnumdictionaryPasswordValidatorSchemaUrn } from './enumdictionary-password-validator-schema-urn';

/**
 * 
 * @export
 * @interface DictionaryPasswordValidatorShared
 */
export interface DictionaryPasswordValidatorShared {
    /**
     * A description for this Password Validator
     * @type {string}
     * @memberof DictionaryPasswordValidatorShared
     */
    'description'?: string;
    /**
     * 
     * @type {Array<EnumdictionaryPasswordValidatorSchemaUrn>}
     * @memberof DictionaryPasswordValidatorShared
     */
    'schemas': Array<EnumdictionaryPasswordValidatorSchemaUrn>;
    /**
     * Specifies the path to the file containing a list of words that cannot be used as passwords.
     * @type {string}
     * @memberof DictionaryPasswordValidatorShared
     */
    'dictionaryFile'?: string;
    /**
     * Indicates whether this password validator is to treat password characters in a case-sensitive manner.
     * @type {boolean}
     * @memberof DictionaryPasswordValidatorShared
     */
    'caseSensitiveValidation'?: boolean;
    /**
     * Indicates whether this password validator is to test the reversed value of the provided password as well as the order in which it was given.
     * @type {boolean}
     * @memberof DictionaryPasswordValidatorShared
     */
    'testReversedPassword'?: boolean;
    /**
     * Indicates whether to ignore any digits, symbols, or other non-alphabetic characters that may appear at the beginning of a proposed password.
     * @type {boolean}
     * @memberof DictionaryPasswordValidatorShared
     */
    'ignoreLeadingNonAlphabeticCharacters'?: boolean;
    /**
     * Indicates whether to ignore any digits, symbols, or other non-alphabetic characters that may appear at the end of a proposed password.
     * @type {boolean}
     * @memberof DictionaryPasswordValidatorShared
     */
    'ignoreTrailingNonAlphabeticCharacters'?: boolean;
    /**
     * Indicates whether to strip characters of any diacritical marks (like accents, cedillas, circumflexes, diaereses, tildes, and umlauts) they may contain. Any characters with a diacritical mark would be replaced with a base version
     * @type {boolean}
     * @memberof DictionaryPasswordValidatorShared
     */
    'stripDiacriticalMarks'?: boolean;
    /**
     * Provides a set of character substitutions that can be applied to the proposed password when checking to see if it is in the provided dictionary. Each mapping should consist of a single character followed by a colon and a list of the alternative characters that may be used in place of that character.
     * @type {Array<string>}
     * @memberof DictionaryPasswordValidatorShared
     */
    'alternativePasswordCharacterMapping'?: Array<string>;
    /**
     * The maximum allowed percent of a proposed password that any single dictionary word is allowed to comprise. A value of 100 indicates that a proposed password will only be rejected if the dictionary contains the entire proposed password (after any configured transformations have been applied).
     * @type {number}
     * @memberof DictionaryPasswordValidatorShared
     */
    'maximumAllowedPercentOfPassword'?: number;
    /**
     * Indicates whether the password validator is enabled for use.
     * @type {boolean}
     * @memberof DictionaryPasswordValidatorShared
     */
    'enabled': boolean;
    /**
     * Specifies a message that can be used to describe the requirements imposed by this password validator to end users. If a value is provided for this property, then it will override any description that may have otherwise been generated by the validator.
     * @type {string}
     * @memberof DictionaryPasswordValidatorShared
     */
    'validatorRequirementDescription'?: string;
    /**
     * Specifies a message that may be provided to the end user in the event that a proposed password is rejected by this validator. If a value is provided for this property, then it will override any failure message that may have otherwise been generated by the validator.
     * @type {string}
     * @memberof DictionaryPasswordValidatorShared
     */
    'validatorFailureMessage'?: string;
}

