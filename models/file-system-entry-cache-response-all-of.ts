/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

The version of the OpenAPI document: 0.1


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { EnumentryCacheCacheTypeProp } from './enumentry-cache-cache-type-prop';
import { EnumfileSystemEntryCacheSchemaUrn } from './enumfile-system-entry-cache-schema-urn';

/**
 * 
 * @export
 * @interface FileSystemEntryCacheResponseAllOf
 */
export interface FileSystemEntryCacheResponseAllOf {
    /**
     * A description for this Entry Cache
     * @type {string}
     * @memberof FileSystemEntryCacheResponseAllOf
     */
    'description'?: string;
    /**
     * 
     * @type {Array<EnumfileSystemEntryCacheSchemaUrn>}
     * @memberof FileSystemEntryCacheResponseAllOf
     */
    'schemas'?: Array<EnumfileSystemEntryCacheSchemaUrn>;
    /**
     * Name of the Entry Cache
     * @type {string}
     * @memberof FileSystemEntryCacheResponseAllOf
     */
    'id'?: string;
    /**
     * The maximum size of the entry cache in bytes.
     * @type {string}
     * @memberof FileSystemEntryCacheResponseAllOf
     */
    'maxMemorySize'?: string;
    /**
     * The maximum number of entries allowed in the cache.
     * @type {number}
     * @memberof FileSystemEntryCacheResponseAllOf
     */
    'maxEntries'?: number;
    /**
     * Specifies the policy which should be used for purging entries from the cache.
     * @type {EnumentryCacheCacheTypeProp}
     * @memberof FileSystemEntryCacheResponseAllOf
     */
    'cacheType'?: EnumentryCacheCacheTypeProp;
    /**
     * Specifies the directory in which the cache database files should be stored.
     * @type {string}
     * @memberof FileSystemEntryCacheResponseAllOf
     */
    'cacheDirectory'?: string;
    /**
     * Specifies whether the cache should persist across restarts.
     * @type {boolean}
     * @memberof FileSystemEntryCacheResponseAllOf
     */
    'persistentCache'?: boolean;
    /**
     * Indicates whether the cache should use a compact form when encoding cache entries by compressing the attribute descriptions and object class sets.
     * @type {boolean}
     * @memberof FileSystemEntryCacheResponseAllOf
     */
    'compactEncoding'?: boolean;
    /**
     * Specifies the maximum memory usage for the internal JE cache as a percentage of the total JVM memory.
     * @type {number}
     * @memberof FileSystemEntryCacheResponseAllOf
     */
    'dbCachePercent'?: number;
    /**
     * Specifies the maximum JVM memory usage in bytes for the internal JE cache.
     * @type {string}
     * @memberof FileSystemEntryCacheResponseAllOf
     */
    'dbCacheSize'?: string;
    /**
     * Specifies the environment properties for the Berkeley DB Java Edition database providing the backend for this entry cache.
     * @type {Array<string>}
     * @memberof FileSystemEntryCacheResponseAllOf
     */
    'jeProperty'?: Array<string>;
    /**
     * The set of filters that define the entries that should be included in the cache.
     * @type {Array<string>}
     * @memberof FileSystemEntryCacheResponseAllOf
     */
    'includeFilter'?: Array<string>;
    /**
     * The set of filters that define the entries that should be excluded from the cache.
     * @type {Array<string>}
     * @memberof FileSystemEntryCacheResponseAllOf
     */
    'excludeFilter'?: Array<string>;
    /**
     * Indicates whether the Entry Cache is enabled.
     * @type {boolean}
     * @memberof FileSystemEntryCacheResponseAllOf
     */
    'enabled'?: boolean;
    /**
     * Specifies the cache level in the cache order if more than one instance of the cache is configured.
     * @type {number}
     * @memberof FileSystemEntryCacheResponseAllOf
     */
    'cacheLevel'?: number;
    /**
     * Indicates whether the entry cache should be updated with entries that have been returned to the client during the course of processing an unindexed search.
     * @type {boolean}
     * @memberof FileSystemEntryCacheResponseAllOf
     */
    'cacheUnindexedSearchResults'?: boolean;
}

