/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

The version of the OpenAPI document: 0.1


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { EnuminvertedStaticGroupReferentialIntegrityPluginSchemaUrn } from './enuminverted-static-group-referential-integrity-plugin-schema-urn';

/**
 * 
 * @export
 * @interface InvertedStaticGroupReferentialIntegrityPluginShared
 */
export interface InvertedStaticGroupReferentialIntegrityPluginShared {
    /**
     * A description for this Plugin
     * @type {string}
     * @memberof InvertedStaticGroupReferentialIntegrityPluginShared
     */
    'description'?: string;
    /**
     * 
     * @type {Array<EnuminvertedStaticGroupReferentialIntegrityPluginSchemaUrn>}
     * @memberof InvertedStaticGroupReferentialIntegrityPluginShared
     */
    'schemas': Array<EnuminvertedStaticGroupReferentialIntegrityPluginSchemaUrn>;
    /**
     * Indicates whether the server should prevent updates to user entries that attempt to add them as a member of an inverted static group that does not exist.
     * @type {boolean}
     * @memberof InvertedStaticGroupReferentialIntegrityPluginShared
     */
    'preventAddingMembersToNonexistentGroups'?: boolean;
    /**
     * Indicates whether the server should prevent attempts to add a group as a regular member of an inverted static group. If the members of another group should be considered members of an inverted static group, then the other group should be added as a nested group rather than a regular member.
     * @type {boolean}
     * @memberof InvertedStaticGroupReferentialIntegrityPluginShared
     */
    'preventAddingGroupsAsInvertedStaticGroupMembers'?: boolean;
    /**
     * Indicates whether the server should prevent updates to inverted static groups that add references to nested groups that don\'t exist.
     * @type {boolean}
     * @memberof InvertedStaticGroupReferentialIntegrityPluginShared
     */
    'preventNestingNonexistentGroups'?: boolean;
    /**
     * Indicates whether the plug-in is enabled for use.
     * @type {boolean}
     * @memberof InvertedStaticGroupReferentialIntegrityPluginShared
     */
    'enabled': boolean;
    /**
     * Indicates whether the plug-in should be invoked for internal operations.
     * @type {boolean}
     * @memberof InvertedStaticGroupReferentialIntegrityPluginShared
     */
    'invokeForInternalOperations'?: boolean;
}

