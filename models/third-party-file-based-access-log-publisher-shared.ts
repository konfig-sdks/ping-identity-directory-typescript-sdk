/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

The version of the OpenAPI document: 0.1


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { EnumlogPublisherCompressionMechanismProp } from './enumlog-publisher-compression-mechanism-prop';
import { EnumlogPublisherLoggingErrorBehaviorProp } from './enumlog-publisher-logging-error-behavior-prop';
import { EnumthirdPartyFileBasedAccessLogPublisherSchemaUrn } from './enumthird-party-file-based-access-log-publisher-schema-urn';

/**
 * 
 * @export
 * @interface ThirdPartyFileBasedAccessLogPublisherShared
 */
export interface ThirdPartyFileBasedAccessLogPublisherShared {
    /**
     * A description for this Log Publisher
     * @type {string}
     * @memberof ThirdPartyFileBasedAccessLogPublisherShared
     */
    'description'?: string;
    /**
     * 
     * @type {Array<EnumthirdPartyFileBasedAccessLogPublisherSchemaUrn>}
     * @memberof ThirdPartyFileBasedAccessLogPublisherShared
     */
    'schemas': Array<EnumthirdPartyFileBasedAccessLogPublisherSchemaUrn>;
    /**
     * The file name to use for the log files generated by the Third Party File Based Access Log Publisher. The path to the file can be specified either as relative to the server root or as an absolute path.
     * @type {string}
     * @memberof ThirdPartyFileBasedAccessLogPublisherShared
     */
    'logFile': string;
    /**
     * The UNIX permissions of the log files created by this Third Party File Based Access Log Publisher.
     * @type {string}
     * @memberof ThirdPartyFileBasedAccessLogPublisherShared
     */
    'logFilePermissions'?: string;
    /**
     * The rotation policy to use for the Third Party File Based Access Log Publisher .
     * @type {Array<string>}
     * @memberof ThirdPartyFileBasedAccessLogPublisherShared
     */
    'rotationPolicy'?: Array<string>;
    /**
     * A listener that should be notified whenever a log file is rotated out of service.
     * @type {Array<string>}
     * @memberof ThirdPartyFileBasedAccessLogPublisherShared
     */
    'rotationListener'?: Array<string>;
    /**
     * The retention policy to use for the Third Party File Based Access Log Publisher .
     * @type {Array<string>}
     * @memberof ThirdPartyFileBasedAccessLogPublisherShared
     */
    'retentionPolicy'?: Array<string>;
    /**
     * Specifies the type of compression (if any) to use for log files that are written.
     * @type {EnumlogPublisherCompressionMechanismProp}
     * @memberof ThirdPartyFileBasedAccessLogPublisherShared
     */
    'compressionMechanism'?: EnumlogPublisherCompressionMechanismProp;
    /**
     * Indicates whether the log should be cryptographically signed so that the log content cannot be altered in an undetectable manner.
     * @type {boolean}
     * @memberof ThirdPartyFileBasedAccessLogPublisherShared
     */
    'signLog'?: boolean;
    /**
     * Indicates whether log files should be encrypted so that their content is not available to unauthorized users.
     * @type {boolean}
     * @memberof ThirdPartyFileBasedAccessLogPublisherShared
     */
    'encryptLog'?: boolean;
    /**
     * Specifies the ID of the encryption settings definition that should be used to encrypt the data. If this is not provided, the server\'s preferred encryption settings definition will be used. The \"encryption-settings list\" command can be used to obtain a list of the encryption settings definitions available in the server.
     * @type {string}
     * @memberof ThirdPartyFileBasedAccessLogPublisherShared
     */
    'encryptionSettingsDefinitionID'?: string;
    /**
     * Specifies whether to append to existing log files.
     * @type {boolean}
     * @memberof ThirdPartyFileBasedAccessLogPublisherShared
     */
    'append'?: boolean;
    /**
     * The fully-qualified name of the Java class providing the logic for the Third Party File Based Access Log Publisher.
     * @type {string}
     * @memberof ThirdPartyFileBasedAccessLogPublisherShared
     */
    'extensionClass': string;
    /**
     * The set of arguments used to customize the behavior for the Third Party File Based Access Log Publisher. Each configuration property should be given in the form \'name=value\'.
     * @type {Array<string>}
     * @memberof ThirdPartyFileBasedAccessLogPublisherShared
     */
    'extensionArgument'?: Array<string>;
    /**
     * Indicates whether the Third Party File Based Access Log Publisher will publish records asynchronously.
     * @type {boolean}
     * @memberof ThirdPartyFileBasedAccessLogPublisherShared
     */
    'asynchronous'?: boolean;
    /**
     * Specifies whether to flush the writer after every log record.
     * @type {boolean}
     * @memberof ThirdPartyFileBasedAccessLogPublisherShared
     */
    'autoFlush'?: boolean;
    /**
     * Specifies the log file buffer size.
     * @type {string}
     * @memberof ThirdPartyFileBasedAccessLogPublisherShared
     */
    'bufferSize'?: string;
    /**
     * The maximum number of log records that can be stored in the asynchronous queue.
     * @type {number}
     * @memberof ThirdPartyFileBasedAccessLogPublisherShared
     */
    'queueSize'?: number;
    /**
     * Specifies the interval at which to check whether the log files need to be rotated.
     * @type {string}
     * @memberof ThirdPartyFileBasedAccessLogPublisherShared
     */
    'timeInterval'?: string;
    /**
     * Indicates whether to log information about connections established to the server.
     * @type {boolean}
     * @memberof ThirdPartyFileBasedAccessLogPublisherShared
     */
    'logConnects'?: boolean;
    /**
     * Indicates whether to log information about connections that have been closed by the client or terminated by the server.
     * @type {boolean}
     * @memberof ThirdPartyFileBasedAccessLogPublisherShared
     */
    'logDisconnects'?: boolean;
    /**
     * Indicates whether to log information about the result of any security negotiation (e.g., SSL handshake) processing that has been performed.
     * @type {boolean}
     * @memberof ThirdPartyFileBasedAccessLogPublisherShared
     */
    'logSecurityNegotiation'?: boolean;
    /**
     * Indicates whether to log information about any client certificates presented to the server.
     * @type {boolean}
     * @memberof ThirdPartyFileBasedAccessLogPublisherShared
     */
    'logClientCertificates'?: boolean;
    /**
     * Indicates whether to log information about requests received from clients.
     * @type {boolean}
     * @memberof ThirdPartyFileBasedAccessLogPublisherShared
     */
    'logRequests'?: boolean;
    /**
     * Indicates whether to log information about the results of client requests.
     * @type {boolean}
     * @memberof ThirdPartyFileBasedAccessLogPublisherShared
     */
    'logResults'?: boolean;
    /**
     * Indicates whether to log information about search result entries sent to the client.
     * @type {boolean}
     * @memberof ThirdPartyFileBasedAccessLogPublisherShared
     */
    'logSearchEntries'?: boolean;
    /**
     * Indicates whether to log information about search result references sent to the client.
     * @type {boolean}
     * @memberof ThirdPartyFileBasedAccessLogPublisherShared
     */
    'logSearchReferences'?: boolean;
    /**
     * Indicates whether to log information about intermediate responses sent to the client.
     * @type {boolean}
     * @memberof ThirdPartyFileBasedAccessLogPublisherShared
     */
    'logIntermediateResponses'?: boolean;
    /**
     * Indicates whether internal operations (for example, operations that are initiated by plugins) should be logged along with the operations that are requested by users.
     * @type {boolean}
     * @memberof ThirdPartyFileBasedAccessLogPublisherShared
     */
    'suppressInternalOperations'?: boolean;
    /**
     * Indicates whether access messages that are generated by replication operations should be suppressed.
     * @type {boolean}
     * @memberof ThirdPartyFileBasedAccessLogPublisherShared
     */
    'suppressReplicationOperations'?: boolean;
    /**
     * Indicates whether to automatically log result messages for any operation in which the corresponding request was logged. In such cases, the result, entry, and reference criteria will be ignored, although the log-responses, log-search-entries, and log-search-references properties will be honored.
     * @type {boolean}
     * @memberof ThirdPartyFileBasedAccessLogPublisherShared
     */
    'correlateRequestsAndResults'?: boolean;
    /**
     * Specifies a set of connection criteria that must match the associated client connection in order for a connect, disconnect, request, or result message to be logged.
     * @type {string}
     * @memberof ThirdPartyFileBasedAccessLogPublisherShared
     */
    'connectionCriteria'?: string;
    /**
     * Specifies a set of request criteria that must match the associated operation request in order for a request or result to be logged by this Access Log Publisher.
     * @type {string}
     * @memberof ThirdPartyFileBasedAccessLogPublisherShared
     */
    'requestCriteria'?: string;
    /**
     * Specifies a set of result criteria that must match the associated operation result in order for that result to be logged by this Access Log Publisher.
     * @type {string}
     * @memberof ThirdPartyFileBasedAccessLogPublisherShared
     */
    'resultCriteria'?: string;
    /**
     * Specifies a set of search entry criteria that must match the associated search result entry in order for that it to be logged by this Access Log Publisher.
     * @type {string}
     * @memberof ThirdPartyFileBasedAccessLogPublisherShared
     */
    'searchEntryCriteria'?: string;
    /**
     * Specifies a set of search reference criteria that must match the associated search result reference in order for that it to be logged by this Access Log Publisher.
     * @type {string}
     * @memberof ThirdPartyFileBasedAccessLogPublisherShared
     */
    'searchReferenceCriteria'?: string;
    /**
     * Indicates whether the Log Publisher is enabled for use.
     * @type {boolean}
     * @memberof ThirdPartyFileBasedAccessLogPublisherShared
     */
    'enabled': boolean;
    /**
     * Specifies the behavior that the server should exhibit if an error occurs during logging processing.
     * @type {EnumlogPublisherLoggingErrorBehaviorProp}
     * @memberof ThirdPartyFileBasedAccessLogPublisherShared
     */
    'loggingErrorBehavior'?: EnumlogPublisherLoggingErrorBehaviorProp;
}

