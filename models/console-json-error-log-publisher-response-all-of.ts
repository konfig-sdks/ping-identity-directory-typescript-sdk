/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

The version of the OpenAPI document: 0.1


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { EnumconsoleJsonErrorLogPublisherSchemaUrn } from './enumconsole-json-error-log-publisher-schema-urn';
import { EnumlogPublisherDefaultSeverityProp } from './enumlog-publisher-default-severity-prop';
import { EnumlogPublisherLoggingErrorBehaviorProp } from './enumlog-publisher-logging-error-behavior-prop';
import { EnumlogPublisherOutputLocationProp } from './enumlog-publisher-output-location-prop';

/**
 * 
 * @export
 * @interface ConsoleJsonErrorLogPublisherResponseAllOf
 */
export interface ConsoleJsonErrorLogPublisherResponseAllOf {
    /**
     * A description for this Log Publisher
     * @type {string}
     * @memberof ConsoleJsonErrorLogPublisherResponseAllOf
     */
    'description'?: string;
    /**
     * 
     * @type {Array<EnumconsoleJsonErrorLogPublisherSchemaUrn>}
     * @memberof ConsoleJsonErrorLogPublisherResponseAllOf
     */
    'schemas'?: Array<EnumconsoleJsonErrorLogPublisherSchemaUrn>;
    /**
     * Name of the Log Publisher
     * @type {string}
     * @memberof ConsoleJsonErrorLogPublisherResponseAllOf
     */
    'id'?: string;
    /**
     * Indicates whether the Console JSON Error Log Publisher is enabled for use.
     * @type {boolean}
     * @memberof ConsoleJsonErrorLogPublisherResponseAllOf
     */
    'enabled'?: boolean;
    /**
     * 
     * @type {Array<EnumlogPublisherDefaultSeverityProp>}
     * @memberof ConsoleJsonErrorLogPublisherResponseAllOf
     */
    'defaultSeverity'?: Array<EnumlogPublisherDefaultSeverityProp>;
    /**
     * Indicates whether the JSON objects should be formatted to span multiple lines with a single element on each line. The multi-line format is potentially more user friendly (if administrators may need to look at the log files), but each message will be larger because of the additional spaces and end-of-line markers.
     * @type {boolean}
     * @memberof ConsoleJsonErrorLogPublisherResponseAllOf
     */
    'writeMultiLineMessages'?: boolean;
    /**
     * Specifies the output stream to which JSON-formatted error log messages should be written.
     * @type {EnumlogPublisherOutputLocationProp}
     * @memberof ConsoleJsonErrorLogPublisherResponseAllOf
     */
    'outputLocation'?: EnumlogPublisherOutputLocationProp;
    /**
     * Indicates whether log messages should include the product name for the Directory Server.
     * @type {boolean}
     * @memberof ConsoleJsonErrorLogPublisherResponseAllOf
     */
    'includeProductName'?: boolean;
    /**
     * Indicates whether log messages should include the instance name for the Directory Server.
     * @type {boolean}
     * @memberof ConsoleJsonErrorLogPublisherResponseAllOf
     */
    'includeInstanceName'?: boolean;
    /**
     * Indicates whether log messages should include the startup ID for the Directory Server, which is a value assigned to the server instance at startup and may be used to identify when the server has been restarted.
     * @type {boolean}
     * @memberof ConsoleJsonErrorLogPublisherResponseAllOf
     */
    'includeStartupID'?: boolean;
    /**
     * Indicates whether log messages should include the thread ID for the Directory Server in each log message. This ID can be used to correlate log messages from the same thread within a single log as well as generated by the same thread across different types of log files. More information about the thread with a specific ID can be obtained using the cn=JVM Stack Trace,cn=monitor entry.
     * @type {boolean}
     * @memberof ConsoleJsonErrorLogPublisherResponseAllOf
     */
    'includeThreadID'?: boolean;
    /**
     * Indicates whether to use the generified version of the log message string (which may use placeholders like %s for a string or %d for an integer), rather than the version of the message with those placeholders replaced with specific values that would normally be written to the log.
     * @type {boolean}
     * @memberof ConsoleJsonErrorLogPublisherResponseAllOf
     */
    'generifyMessageStringsWhenPossible'?: boolean;
    /**
     * Specifies the override severity levels for the logger based on the category of the messages.
     * @type {Array<string>}
     * @memberof ConsoleJsonErrorLogPublisherResponseAllOf
     */
    'overrideSeverity'?: Array<string>;
    /**
     * Specifies the behavior that the server should exhibit if an error occurs during logging processing.
     * @type {EnumlogPublisherLoggingErrorBehaviorProp}
     * @memberof ConsoleJsonErrorLogPublisherResponseAllOf
     */
    'loggingErrorBehavior'?: EnumlogPublisherLoggingErrorBehaviorProp;
}

