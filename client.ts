/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

The version of the OpenAPI document: 0.1


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/

import { AxiosRequestConfig } from "axios";
import {
  AccessControlHandlerApi,
  AccessTokenValidatorApi,
  AccountStatusNotificationHandlerApi,
  AlarmManagerApi,
  AlertHandlerApi,
  AttributeSyntaxApi,
  AzureAuthenticationMethodApi,
  BackendApi,
  CertificateMapperApi,
  ChangeSubscriptionApi,
  ChangeSubscriptionHandlerApi,
  CipherSecretKeyApi,
  CipherStreamProviderApi,
  ClientConnectionPolicyApi,
  ConjurAuthenticationMethodApi,
  ConnectionCriteriaApi,
  ConnectionHandlerApi,
  ConsentDefinitionApi,
  ConsentDefinitionLocalizationApi,
  ConsentServiceApi,
  ConstructedAttributeApi,
  CorrelatedLdapDataViewApi,
  CryptoManagerApi,
  CustomLoggedStatsApi,
  DataSecurityAuditorApi,
  DebugTargetApi,
  DelegatedAdminAttributeApi,
  DelegatedAdminAttributeCategoryApi,
  DelegatedAdminCorrelatedRestResourceApi,
  DelegatedAdminResourceRightsApi,
  DelegatedAdminRightsApi,
  DnMapApi,
  EntryCacheApi,
  ExtendedOperationHandlerApi,
  ExternalServerApi,
  FailureLockoutActionApi,
  GaugeApi,
  GaugeDataSourceApi,
  GlobalConfigurationApi,
  GroupImplementationApi,
  HttpConfigurationApi,
  HttpServletCrossOriginPolicyApi,
  HttpServletExtensionApi,
  IdTokenValidatorApi,
  IdentityMapperApi,
  InterServerAuthenticationInfoApi,
  JsonAttributeConstraintsApi,
  JsonFieldConstraintsApi,
  KeyManagerProviderApi,
  KeyPairApi,
  LdapCorrelationAttributePairApi,
  LdapSdkDebugLoggerApi,
  LicenseApi,
  LocalDbCompositeIndexApi,
  LocalDbIndexApi,
  LocalDbVlvIndexApi,
  LocationApi,
  LogFieldBehaviorApi,
  LogFieldMappingApi,
  LogFieldSyntaxApi,
  LogFileRotationListenerApi,
  LogPublisherApi,
  LogRetentionPolicyApi,
  LogRotationPolicyApi,
  MacSecretKeyApi,
  MatchingRuleApi,
  MonitorProviderApi,
  MonitoringEndpointApi,
  NotificationManagerApi,
  OauthTokenHandlerApi,
  ObscuredValueApi,
  OtpDeliveryMechanismApi,
  PassThroughAuthenticationHandlerApi,
  PassphraseProviderApi,
  PasswordGeneratorApi,
  PasswordPolicyApi,
  PasswordStorageSchemeApi,
  PasswordValidatorApi,
  PluginApi,
  PluginRootApi,
  PostLdifExportTaskProcessorApi,
  PrometheusMonitorAttributeMetricApi,
  RecurringTaskApi,
  RecurringTaskChainApi,
  ReplicationAssurancePolicyApi,
  ReplicationDomainApi,
  ReplicationServerApi,
  RequestCriteriaApi,
  RestResourceTypeApi,
  ResultCodeMapApi,
  ResultCriteriaApi,
  RootDnApi,
  RootDnUserApi,
  RootDseBackendApi,
  SaslMechanismHandlerApi,
  ScimAttributeApi,
  ScimAttributeMappingApi,
  ScimResourceTypeApi,
  ScimSchemaApi,
  ScimSubattributeApi,
  SearchEntryCriteriaApi,
  SearchReferenceCriteriaApi,
  SensitiveAttributeApi,
  ServerGroupApi,
  ServerInstanceApi,
  ServerInstanceListenerApi,
  SoftDeletePolicyApi,
  SynchronizationProviderApi,
  TokenClaimValidationApi,
  TopologyAdminUserApi,
  TrustManagerProviderApi,
  TrustedCertificateApi,
  UncachedAttributeCriteriaApi,
  UncachedEntryCriteriaApi,
  VaultAuthenticationMethodApi,
  VelocityContextProviderApi,
  VelocityTemplateLoaderApi,
  VirtualAttributeApi,
  WebApplicationExtensionApi,
  WorkQueueApi,
} from "./api";
import { Configuration, ConfigurationParameters } from "./configuration";
import { PingIdentityDirectoryCustom } from "./client-custom";

export class PingIdentityDirectory extends PingIdentityDirectoryCustom {
  readonly accessControlHandler: AccessControlHandlerApi;
  readonly accessTokenValidator: AccessTokenValidatorApi;
  readonly accountStatusNotificationHandler: AccountStatusNotificationHandlerApi;
  readonly alarmManager: AlarmManagerApi;
  readonly alertHandler: AlertHandlerApi;
  readonly attributeSyntax: AttributeSyntaxApi;
  readonly azureAuthenticationMethod: AzureAuthenticationMethodApi;
  readonly backend: BackendApi;
  readonly certificateMapper: CertificateMapperApi;
  readonly changeSubscription: ChangeSubscriptionApi;
  readonly changeSubscriptionHandler: ChangeSubscriptionHandlerApi;
  readonly cipherSecretKey: CipherSecretKeyApi;
  readonly cipherStreamProvider: CipherStreamProviderApi;
  readonly clientConnectionPolicy: ClientConnectionPolicyApi;
  readonly conjurAuthenticationMethod: ConjurAuthenticationMethodApi;
  readonly connectionCriteria: ConnectionCriteriaApi;
  readonly connectionHandler: ConnectionHandlerApi;
  readonly consentDefinition: ConsentDefinitionApi;
  readonly consentDefinitionLocalization: ConsentDefinitionLocalizationApi;
  readonly consentService: ConsentServiceApi;
  readonly constructedAttribute: ConstructedAttributeApi;
  readonly correlatedLdapDataView: CorrelatedLdapDataViewApi;
  readonly cryptoManager: CryptoManagerApi;
  readonly customLoggedStats: CustomLoggedStatsApi;
  readonly dataSecurityAuditor: DataSecurityAuditorApi;
  readonly debugTarget: DebugTargetApi;
  readonly delegatedAdminAttribute: DelegatedAdminAttributeApi;
  readonly delegatedAdminAttributeCategory: DelegatedAdminAttributeCategoryApi;
  readonly delegatedAdminCorrelatedRestResource: DelegatedAdminCorrelatedRestResourceApi;
  readonly delegatedAdminResourceRights: DelegatedAdminResourceRightsApi;
  readonly delegatedAdminRights: DelegatedAdminRightsApi;
  readonly dnMap: DnMapApi;
  readonly entryCache: EntryCacheApi;
  readonly extendedOperationHandler: ExtendedOperationHandlerApi;
  readonly externalServer: ExternalServerApi;
  readonly failureLockoutAction: FailureLockoutActionApi;
  readonly gauge: GaugeApi;
  readonly gaugeDataSource: GaugeDataSourceApi;
  readonly globalConfiguration: GlobalConfigurationApi;
  readonly groupImplementation: GroupImplementationApi;
  readonly httpConfiguration: HttpConfigurationApi;
  readonly httpServletCrossOriginPolicy: HttpServletCrossOriginPolicyApi;
  readonly httpServletExtension: HttpServletExtensionApi;
  readonly idTokenValidator: IdTokenValidatorApi;
  readonly identityMapper: IdentityMapperApi;
  readonly interServerAuthenticationInfo: InterServerAuthenticationInfoApi;
  readonly jsonAttributeConstraints: JsonAttributeConstraintsApi;
  readonly jsonFieldConstraints: JsonFieldConstraintsApi;
  readonly keyManagerProvider: KeyManagerProviderApi;
  readonly keyPair: KeyPairApi;
  readonly ldapCorrelationAttributePair: LdapCorrelationAttributePairApi;
  readonly ldapSdkDebugLogger: LdapSdkDebugLoggerApi;
  readonly license: LicenseApi;
  readonly localDbCompositeIndex: LocalDbCompositeIndexApi;
  readonly localDbIndex: LocalDbIndexApi;
  readonly localDbVlvIndex: LocalDbVlvIndexApi;
  readonly location: LocationApi;
  readonly logFieldBehavior: LogFieldBehaviorApi;
  readonly logFieldMapping: LogFieldMappingApi;
  readonly logFieldSyntax: LogFieldSyntaxApi;
  readonly logFileRotationListener: LogFileRotationListenerApi;
  readonly logPublisher: LogPublisherApi;
  readonly logRetentionPolicy: LogRetentionPolicyApi;
  readonly logRotationPolicy: LogRotationPolicyApi;
  readonly macSecretKey: MacSecretKeyApi;
  readonly matchingRule: MatchingRuleApi;
  readonly monitorProvider: MonitorProviderApi;
  readonly monitoringEndpoint: MonitoringEndpointApi;
  readonly notificationManager: NotificationManagerApi;
  readonly oauthTokenHandler: OauthTokenHandlerApi;
  readonly obscuredValue: ObscuredValueApi;
  readonly otpDeliveryMechanism: OtpDeliveryMechanismApi;
  readonly passThroughAuthenticationHandler: PassThroughAuthenticationHandlerApi;
  readonly passphraseProvider: PassphraseProviderApi;
  readonly passwordGenerator: PasswordGeneratorApi;
  readonly passwordPolicy: PasswordPolicyApi;
  readonly passwordStorageScheme: PasswordStorageSchemeApi;
  readonly passwordValidator: PasswordValidatorApi;
  readonly plugin: PluginApi;
  readonly pluginRoot: PluginRootApi;
  readonly postLdifExportTaskProcessor: PostLdifExportTaskProcessorApi;
  readonly prometheusMonitorAttributeMetric: PrometheusMonitorAttributeMetricApi;
  readonly recurringTask: RecurringTaskApi;
  readonly recurringTaskChain: RecurringTaskChainApi;
  readonly replicationAssurancePolicy: ReplicationAssurancePolicyApi;
  readonly replicationDomain: ReplicationDomainApi;
  readonly replicationServer: ReplicationServerApi;
  readonly requestCriteria: RequestCriteriaApi;
  readonly restResourceType: RestResourceTypeApi;
  readonly resultCodeMap: ResultCodeMapApi;
  readonly resultCriteria: ResultCriteriaApi;
  readonly rootDn: RootDnApi;
  readonly rootDnUser: RootDnUserApi;
  readonly rootDseBackend: RootDseBackendApi;
  readonly saslMechanismHandler: SaslMechanismHandlerApi;
  readonly scimAttribute: ScimAttributeApi;
  readonly scimAttributeMapping: ScimAttributeMappingApi;
  readonly scimResourceType: ScimResourceTypeApi;
  readonly scimSchema: ScimSchemaApi;
  readonly scimSubattribute: ScimSubattributeApi;
  readonly searchEntryCriteria: SearchEntryCriteriaApi;
  readonly searchReferenceCriteria: SearchReferenceCriteriaApi;
  readonly sensitiveAttribute: SensitiveAttributeApi;
  readonly serverGroup: ServerGroupApi;
  readonly serverInstance: ServerInstanceApi;
  readonly serverInstanceListener: ServerInstanceListenerApi;
  readonly softDeletePolicy: SoftDeletePolicyApi;
  readonly synchronizationProvider: SynchronizationProviderApi;
  readonly tokenClaimValidation: TokenClaimValidationApi;
  readonly topologyAdminUser: TopologyAdminUserApi;
  readonly trustManagerProvider: TrustManagerProviderApi;
  readonly trustedCertificate: TrustedCertificateApi;
  readonly uncachedAttributeCriteria: UncachedAttributeCriteriaApi;
  readonly uncachedEntryCriteria: UncachedEntryCriteriaApi;
  readonly vaultAuthenticationMethod: VaultAuthenticationMethodApi;
  readonly velocityContextProvider: VelocityContextProviderApi;
  readonly velocityTemplateLoader: VelocityTemplateLoaderApi;
  readonly virtualAttribute: VirtualAttributeApi;
  readonly webApplicationExtension: WebApplicationExtensionApi;
  readonly workQueue: WorkQueueApi;

  constructor(configurationParameters: ConfigurationParameters) {
    super(configurationParameters);
    const configuration = new Configuration(configurationParameters);
    this.accessControlHandler = new AccessControlHandlerApi(configuration);
    this.accessTokenValidator = new AccessTokenValidatorApi(configuration);
    this.accountStatusNotificationHandler = new AccountStatusNotificationHandlerApi(configuration);
    this.alarmManager = new AlarmManagerApi(configuration);
    this.alertHandler = new AlertHandlerApi(configuration);
    this.attributeSyntax = new AttributeSyntaxApi(configuration);
    this.azureAuthenticationMethod = new AzureAuthenticationMethodApi(configuration);
    this.backend = new BackendApi(configuration);
    this.certificateMapper = new CertificateMapperApi(configuration);
    this.changeSubscription = new ChangeSubscriptionApi(configuration);
    this.changeSubscriptionHandler = new ChangeSubscriptionHandlerApi(configuration);
    this.cipherSecretKey = new CipherSecretKeyApi(configuration);
    this.cipherStreamProvider = new CipherStreamProviderApi(configuration);
    this.clientConnectionPolicy = new ClientConnectionPolicyApi(configuration);
    this.conjurAuthenticationMethod = new ConjurAuthenticationMethodApi(configuration);
    this.connectionCriteria = new ConnectionCriteriaApi(configuration);
    this.connectionHandler = new ConnectionHandlerApi(configuration);
    this.consentDefinition = new ConsentDefinitionApi(configuration);
    this.consentDefinitionLocalization = new ConsentDefinitionLocalizationApi(configuration);
    this.consentService = new ConsentServiceApi(configuration);
    this.constructedAttribute = new ConstructedAttributeApi(configuration);
    this.correlatedLdapDataView = new CorrelatedLdapDataViewApi(configuration);
    this.cryptoManager = new CryptoManagerApi(configuration);
    this.customLoggedStats = new CustomLoggedStatsApi(configuration);
    this.dataSecurityAuditor = new DataSecurityAuditorApi(configuration);
    this.debugTarget = new DebugTargetApi(configuration);
    this.delegatedAdminAttribute = new DelegatedAdminAttributeApi(configuration);
    this.delegatedAdminAttributeCategory = new DelegatedAdminAttributeCategoryApi(configuration);
    this.delegatedAdminCorrelatedRestResource = new DelegatedAdminCorrelatedRestResourceApi(configuration);
    this.delegatedAdminResourceRights = new DelegatedAdminResourceRightsApi(configuration);
    this.delegatedAdminRights = new DelegatedAdminRightsApi(configuration);
    this.dnMap = new DnMapApi(configuration);
    this.entryCache = new EntryCacheApi(configuration);
    this.extendedOperationHandler = new ExtendedOperationHandlerApi(configuration);
    this.externalServer = new ExternalServerApi(configuration);
    this.failureLockoutAction = new FailureLockoutActionApi(configuration);
    this.gauge = new GaugeApi(configuration);
    this.gaugeDataSource = new GaugeDataSourceApi(configuration);
    this.globalConfiguration = new GlobalConfigurationApi(configuration);
    this.groupImplementation = new GroupImplementationApi(configuration);
    this.httpConfiguration = new HttpConfigurationApi(configuration);
    this.httpServletCrossOriginPolicy = new HttpServletCrossOriginPolicyApi(configuration);
    this.httpServletExtension = new HttpServletExtensionApi(configuration);
    this.idTokenValidator = new IdTokenValidatorApi(configuration);
    this.identityMapper = new IdentityMapperApi(configuration);
    this.interServerAuthenticationInfo = new InterServerAuthenticationInfoApi(configuration);
    this.jsonAttributeConstraints = new JsonAttributeConstraintsApi(configuration);
    this.jsonFieldConstraints = new JsonFieldConstraintsApi(configuration);
    this.keyManagerProvider = new KeyManagerProviderApi(configuration);
    this.keyPair = new KeyPairApi(configuration);
    this.ldapCorrelationAttributePair = new LdapCorrelationAttributePairApi(configuration);
    this.ldapSdkDebugLogger = new LdapSdkDebugLoggerApi(configuration);
    this.license = new LicenseApi(configuration);
    this.localDbCompositeIndex = new LocalDbCompositeIndexApi(configuration);
    this.localDbIndex = new LocalDbIndexApi(configuration);
    this.localDbVlvIndex = new LocalDbVlvIndexApi(configuration);
    this.location = new LocationApi(configuration);
    this.logFieldBehavior = new LogFieldBehaviorApi(configuration);
    this.logFieldMapping = new LogFieldMappingApi(configuration);
    this.logFieldSyntax = new LogFieldSyntaxApi(configuration);
    this.logFileRotationListener = new LogFileRotationListenerApi(configuration);
    this.logPublisher = new LogPublisherApi(configuration);
    this.logRetentionPolicy = new LogRetentionPolicyApi(configuration);
    this.logRotationPolicy = new LogRotationPolicyApi(configuration);
    this.macSecretKey = new MacSecretKeyApi(configuration);
    this.matchingRule = new MatchingRuleApi(configuration);
    this.monitorProvider = new MonitorProviderApi(configuration);
    this.monitoringEndpoint = new MonitoringEndpointApi(configuration);
    this.notificationManager = new NotificationManagerApi(configuration);
    this.oauthTokenHandler = new OauthTokenHandlerApi(configuration);
    this.obscuredValue = new ObscuredValueApi(configuration);
    this.otpDeliveryMechanism = new OtpDeliveryMechanismApi(configuration);
    this.passThroughAuthenticationHandler = new PassThroughAuthenticationHandlerApi(configuration);
    this.passphraseProvider = new PassphraseProviderApi(configuration);
    this.passwordGenerator = new PasswordGeneratorApi(configuration);
    this.passwordPolicy = new PasswordPolicyApi(configuration);
    this.passwordStorageScheme = new PasswordStorageSchemeApi(configuration);
    this.passwordValidator = new PasswordValidatorApi(configuration);
    this.plugin = new PluginApi(configuration);
    this.pluginRoot = new PluginRootApi(configuration);
    this.postLdifExportTaskProcessor = new PostLdifExportTaskProcessorApi(configuration);
    this.prometheusMonitorAttributeMetric = new PrometheusMonitorAttributeMetricApi(configuration);
    this.recurringTask = new RecurringTaskApi(configuration);
    this.recurringTaskChain = new RecurringTaskChainApi(configuration);
    this.replicationAssurancePolicy = new ReplicationAssurancePolicyApi(configuration);
    this.replicationDomain = new ReplicationDomainApi(configuration);
    this.replicationServer = new ReplicationServerApi(configuration);
    this.requestCriteria = new RequestCriteriaApi(configuration);
    this.restResourceType = new RestResourceTypeApi(configuration);
    this.resultCodeMap = new ResultCodeMapApi(configuration);
    this.resultCriteria = new ResultCriteriaApi(configuration);
    this.rootDn = new RootDnApi(configuration);
    this.rootDnUser = new RootDnUserApi(configuration);
    this.rootDseBackend = new RootDseBackendApi(configuration);
    this.saslMechanismHandler = new SaslMechanismHandlerApi(configuration);
    this.scimAttribute = new ScimAttributeApi(configuration);
    this.scimAttributeMapping = new ScimAttributeMappingApi(configuration);
    this.scimResourceType = new ScimResourceTypeApi(configuration);
    this.scimSchema = new ScimSchemaApi(configuration);
    this.scimSubattribute = new ScimSubattributeApi(configuration);
    this.searchEntryCriteria = new SearchEntryCriteriaApi(configuration);
    this.searchReferenceCriteria = new SearchReferenceCriteriaApi(configuration);
    this.sensitiveAttribute = new SensitiveAttributeApi(configuration);
    this.serverGroup = new ServerGroupApi(configuration);
    this.serverInstance = new ServerInstanceApi(configuration);
    this.serverInstanceListener = new ServerInstanceListenerApi(configuration);
    this.softDeletePolicy = new SoftDeletePolicyApi(configuration);
    this.synchronizationProvider = new SynchronizationProviderApi(configuration);
    this.tokenClaimValidation = new TokenClaimValidationApi(configuration);
    this.topologyAdminUser = new TopologyAdminUserApi(configuration);
    this.trustManagerProvider = new TrustManagerProviderApi(configuration);
    this.trustedCertificate = new TrustedCertificateApi(configuration);
    this.uncachedAttributeCriteria = new UncachedAttributeCriteriaApi(configuration);
    this.uncachedEntryCriteria = new UncachedEntryCriteriaApi(configuration);
    this.vaultAuthenticationMethod = new VaultAuthenticationMethodApi(configuration);
    this.velocityContextProvider = new VelocityContextProviderApi(configuration);
    this.velocityTemplateLoader = new VelocityTemplateLoaderApi(configuration);
    this.virtualAttribute = new VirtualAttributeApi(configuration);
    this.webApplicationExtension = new WebApplicationExtensionApi(configuration);
    this.workQueue = new WorkQueueApi(configuration);
  }

}
